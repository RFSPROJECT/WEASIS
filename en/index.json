[
{
	"uri": "https://nroduit.github.io/en/getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": "Try Weasis now These native installers below replace the weasis-portable.zip package (still available here until version 4.0) and no longer requires Java to be installed on the system. It also serves as a basis for launching Weasis from a web context using the weasis protocol. See below the differences between the weasis distributions.\n Operating System Architecture Package Size Weasis installer Comments   Linux x86 64-bit DEB 36.9 MB weasis_3.7.0-1_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 51.1 MB weasis-3.7.0-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 49.5 MB Weasis-3.7.0.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 37.3 MB Weasis-3.7.0-x86-64.msi  Requires Windows 7, 8 or 10   See this page for getting the list of all the packages to download and other Websites distibuting Weasis.\nTo manage Weasis version at the server side, it is possible to install the Weasis web package which will upgrade the native installation at the client side (it works for minor releases by updating all the plug-ins except the launcher).\nThe different possibilities for integrating Weasis with other systems are described here.\n Join the google group (Choose Email to read this group) to stay informed about new releases and updates.\n General Topics  Live demo with different DICOM dataset. Weasis Web Protocol Installing Weasis in DCM4CHEE Tutorials Weasis Forum Frequently Asked Questions (FAQs) Dicom Conformance and IHE Get Involved!  Developer Documentation  Building Weasis from source Weasis Architecture Weasis Plug-in Development Guidelines How to build and install a plug-in How to launch Weasis from any environments Translating Weasis Plug-ins Weasis Preferences Building weasis-pacs-connector Issues on Github  Weasis distributions The table below shows the differences between the distributions (the answer yes is the best):\n Weasis native installer: Windows MSI, macOS PKG, and Linux RPM and DEB. Can be used as a standalone application or connected to the web distribution (allows you to launch the defined version remotely) Weasis portable: weasis-portable.zip. Can be used in removable devices. Weasis web with Java Webstart: weasis.war and using Java Webstart as launcher (JNLP). Java Webstart has been removed from Java 11.     Description of features Weasis native installer Weasis portable Weasis web with Java Webstart     Does not require a Java installation Yes No but a JRE related to the system can be placed in the package (e.g. jre/windows) No   Does not require admin permissions to install No Yes (except on recent Mac OS X versions) No (requires Java installation)   Supported Java 11 or superior Yes Yes but only from Weasis 3.5 No (JWS has been removed from Java 11)   Start from web page Yes N/A Yes but directly only with JNLP protocol, otherwise required to download and execute jnlp file   Start from any software Yes No Yes but only with JNLP protocol   Start from command line Yes (use weasis protocol without additional information) Yes (required to know the script location) Yes with javaws (required a third-party software to build the JNLP file dynamically)   Single instance mechanism Yes (smart rules based on profile) Partially (only on Windows without smart rules) Yes but contains several issues   Supports HiDPI monitors Yes Yes but only when running Java 13 or superior No   Shortcut to launch from the OS Yes No No   Running on recent Mac OS X Yes (supports sandboxing) No Yes but it requires to have Java 8 as default Java version   Menu integration on Mac OS X Yes Yes from Weasis 3.5 but only when running Java 9 or superior No   OS integration for all the machine users Yes No No   DICOM files association at the system level with Weasis Yes No No   Register weasis protocol at the system level Yes No No   Loading studies with DICOMWeb RESTful archive from a web context Yes (can be done directly without weasis-pacs-connector) N/A No (not implement in weasis-pacs-connector)   Launch by weasis-pacs-connector Yes (required weasis-pacs-connector 7.1.1) N/A Yes but weasis-pacs-connector 7.1.1 must be called by the deprecated service http://hostname/weasis-pacs-connector/viewer   Integration with dcm4chee-2.x web portal Yes (required weasis-pacs-connector 6.1.5) N/A Yes (required weasis-pacs-connector 6.x)   Integration with dcm4chee-arc-light web portal Yes N/A Yes   Weasis automatic remote update Yes (except Java and the launcher) N/A Yes   Handle preferences at server-side Yes N/A Yes   API to manage user remote preferences Yes N/A Yes from Weasis 3.5   API to manage launcher configuration Yes N/A Yes from Weasis 3.5 (not implement in weasis-pacs-connector and not fully compliant)     "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/download/",
	"title": "Download Weasis DICOM Viewer",
	"tags": [],
	"description": "List of native installer releases",
	"content": "Websites distibuting Weasis Weasis can also be retrieved from other websites or package management systems, here are some of them:\n Windows store Chocolatey Community Repository Arclinux Sourceforge Softpedia Windows and Mac OS Mac Update  List of all the installers These native installers below no longer requires Java Runtimes to be installed on the system.\n Operating System Architecture Package Size Weasis installer Comments  v3.7.0 publised on Feb 6, 2021   Linux x86 64-bit DEB 36.9 MB weasis_3.7.0-1_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 51.1 MB weasis-3.7.0-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 49.5 MB Weasis-3.7.0.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 37.3 MB Weasis-3.7.0-x86-64.msi  Requires Windows 7, 8 or 10  v3.6.2 publised on Aug 27, 2020   Linux x86 64-bit DEB 34.9 MB weasis_3.6.2-1_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 48.6 MB weasis-3.6.2-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 47.4 MB Weasis-3.6.2.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 35.2 MB Weasis-3.6.2-x86-64.msi  Requires Windows 7, 8 or 10   Windows x86 32-bit MSI 43.4 MB Weasis-3.6.2-x86.msi  Requires Windows 7, 8 or 10  v3.6.1 publised on Jul 5, 2020   Linux x86 64-bit DEB 39.0 MB weasis_3.6.1-1_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 55.2 MB weasis-3.6.1-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 47.9 MB Weasis-3.6.1.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 35.1 MB Weasis-3.6.1-x86-64.msi  Requires Windows 7, 8 or 10   Windows x86 32-bit MSI 36.7 MB Weasis-3.6.1-x86.msi  Requires Windows 7, 8 or 10  v3.6.0 publised on Mar 6, 2020   Linux x86 64-bit DEB 40.3 MB weasis_3.6.0-1_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 57.3 MB weasis-3.6.0-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 51.5 MB Weasis-3.6.0.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 40.1 MB Weasis-3.6.0-x86-64.msi  Requires Windows 7, 8 or 10   Windows x86 32-bit MSI 41.2 MB Weasis-3.6.0-x86.msi  Requires Windows 7, 8 or 10  v3.5.4 publised on Nov 1, 2019   Linux x86 64-bit DEB 38.7 MB weasis_3.5.4-1_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 55.8 MB weasis-3.5.4-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 49.4 MB Weasis-3.5.4.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 37.8 MB Weasis-3.5.4-x86-64.msi  Requires Windows 7, 8 or 10   Windows x86 32-bit MSI 39.7 MB Weasis-3.5.4-x86.msi  Requires Windows 7, 8 or 10  v3.5.3 publised on Aug 10, 2019   Linux x86 64-bit DEB 38.3 MB weasis_3.5.3_amd64.deb  Requires GLIBC_2.14 or higher   Linux x86 64-bit RPM 55.3 MB weasis-3.5.3-1.x86_64.rpm  Requires GLIBC_2.14 or higher   Mac OS x86 64-bit PKG 47.5 MB Weasis-3.5.3.pkg  Requires Mac OS 10.9 or higher   Windows x86 64-bit MSI 37.2 MB Weasis-3.5.3-x86-64.msi  Requires Windows 7, 8 or 10   Windows x86 32-bit MSI 39.0 MB Weasis-3.5.3-x86.msi  Requires Windows 7, 8 or 10   "
},
{
	"uri": "https://nroduit.github.io/en/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": "  Weasis Architecture   Shortcuts   Customize   Weasis Commands   Dicom Conformance   "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/dcm4chee/",
	"title": "Embedding in dcm4chee",
	"tags": [],
	"description": "How installing Weasis to be the default web viewer of dcm4chee web interface",
	"content": "This page describes how installing Weasis to be the default web viewer of dcm4chee web interface. See How to launch Weasis from any environments to integrate Weasis into your own user interface.\nWeasis is launched from the dcm4chee administrative web interface with the weasis protocol, as shown in the pictures below. The documentation where Weasis was launched with Java Webstart is still available here.\n For dcm4chee-arc-light For a simpler and faster installation without server components, please follow these instructions; no need to consider the following points on this page. Otherwise if you need more advanced configurations then follow these steps:\n  Install dcm4chee, if not already done (Installation with Docker is straightforward).\n  Go here and download these following files: Download issue: Some browsers (like Internet Explorer) may rename war files to zip. If so, use the Save As option when downloading and change the name back to war.\n  From weasis-pacs-connector folder:  [weasis-pacs-connector.war] Requires at least the version 7.1.2   From the folder with the latest version number (Optional if you want to run only the native version installed on the client system):  [weasis.war] requires at least Weasis 3.5.3 [weasis-i18n.war] Optional for internationalization [weasis-ext.war] Optional package for additional plug-ins (e.g. exporting the images to build an ISO image for CD/DVD)   From the folder with the latest version number:    Open the wildfly management console (at http://\u0026lt;your-host\u0026gt;:9990).\n Select the “Deployments” tab Add the .war files using the “Add” button (Choose Upload a new deployment or select Replace when the file already exists) Alternatively one may deploy .war files using JBoss Command Line Interface Console.\n     Configure weasis-pacs-connector (This step is optional if you just want to keep the default configuration).\nThe default configuration is stored in two files inside weasis-pacs-connector.war. To override the default configuration:\n Download the current weasis-pacs-connector.properties and dicom-dcm4chee-arc.properties (configuration of the dcm4chee archive) Edit the configuration as needed. For example, dcm4chee may be running on a different computer than Weasis, or the AE Title of dcm4chee may have been changed. If so, edit weasis-pacs-connector.properties or dicom-dcm4chee-arc.properties (Change pacs.host, pacs.port, and pacs.aet). Copy weasis-pacs-connector.properties and dicom-dcm4chee-arc.properties into $WILDFLY_HOME/standalone/configuration (where $WILDFLY_HOME is the path of the running Wildfly).\nWith the docker installation use the docker copy command ($ docker cp \u0026hellip;) Instead of copying the files into $WILDFLY_HOME/standalone/configuration, JBoss Command Line Interface Console can be used to override files in the war. Add the two configuration files with the deployment-overlay command:\n deployment-overlay add --name=dcm4chee-arc --deployments=weasis-pacs-connector.war --content=WEB-INF/classes/weasis-pacs-connector.properties=/tmp/weasis-pacs-connector.properties,WEB-INF/classes/dicom-dcm4chee-arc.properties=/tmp/dicom-dcm4chee-arc.properties --redeploy-affected For applying the new configuration, from the management console \u0026ldquo;Disable\u0026rdquo; weasis-pacs-connector.war and then \u0026ldquo;Enable\u0026rdquo;    To activate Weasis in the dcm4chee-arc-light user interface (see the matrix of the required versions in the table below): you need to add attributes by either editing docker-compose.env (from 5.22.0) or from the left menu Configuration \u0026gt; Devices \u0026gt; dcm4chee-arc \u0026gt; Extensions \u0026gt; Edit extension \u0026gt; Child Objects \u0026gt; Web Applications \u0026gt; DCM4CHEE (add \u0026amp;cdb to the URL if weasis.war has not been deployed on the server-side):\n Configure the URL for having a view button for the patient or study level.  From dcm4chee-arc-light 5.10.2 to 5.19.0 the left menu Configuration \u0026gt; Devices \u0026gt; dcm4chee-arc \u0026gt; Extensions \u0026gt; Archive Device From dcm4chee-arc-light 5.19.1 the left menu Configuration \u0026gt; Devices \u0026gt; dcm4chee-arc \u0026gt; Extensions \u0026gt; Edit extension \u0026gt; Child Objects \u0026gt; Web Applications \u0026gt; DCM4CHEE From dcm4chee-arc-light 5.22.0 by editing docker-compose.env (It allows you to directly apply the properties when deploying, then the can be edited in the web portal). Note: the character ‘\u0026amp;’ must be escaped (e.g. IID_STUDY_URL=../../weasis-pacs-connector/weasis?studyUID={{studyUID}}\\\u0026amp;access_token={{access_token}}) URL parameters\n access_token is necessary in secure mode (secured RESTful services) from dcm4chee-arc-light 5.15.1 _self avoids to open a new empty window in the web browser\n cdb cdb parameter to override the URL of the Weasis web context to null (when you want only the native local version or when weasis.war has not be deployed with weasis-pacs-connector)\n See also Invoke Image Display in dcm4chee   Absolute path: The values above starting by \u0026ldquo;../\u0026rdquo; are the default relative path when weasis-pacs-connector is installed in the same JBoss as dcm4chee. Otherwise replace the relative URL by an absolute value, ex: http://\u0026lt;your-host\u0026gt;:\u0026lt;port\u0026gt;/weasis-pacs-connector/...\n    Optional: add other properties in the URL. Refresh the web page and the view button should appear as in the screenshot above To launch the viewer from the web portal, the client computer must have installed the Weasis package.       Mode dcm4chee version Configuration     Unsecured from 5.10.2 to 5.19.0 ../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;target=_self\n../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;target=_self   Unsecured* from 5.10.2 to 5.19.0 ../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;cdb\u0026amp;target=_self\n../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;cdb\u0026amp;target=_self   Secured from 5.15.1 to 5.19.0 ../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;target=_self\u0026amp;access_token={}\n../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;target=_self\u0026amp;access_token={}   Secured* from 5.15.1 to 5.19.0 ../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;cdb\u0026amp;target=_self\u0026amp;access_token={}\n../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;cdb\u0026amp;target=_self\u0026amp;access_token={}   Unsecured from 5.19.1 to 5.22.1 IID_PATIENT_URL=../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;target=_self\nIID_STUDY_URL=../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;target=_self   Unsecured* from 5.19.1 to 5.22.1 IID_PATIENT_URL=../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;cdb\u0026amp;target=_self\nIID_STUDY_URL=../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;cdb\u0026amp;target=_self   Secured from 5.19.1 to 5.22.1 IID_PATIENT_URL=../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;target=_self\u0026amp;access_token={}\nIID_STUDY_URL=../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;target=_self\u0026amp;access_token={}   Secured* from 5.19.1 to 5.22.1 IID_PATIENT_URL=../../weasis-pacs-connector/weasis?\u0026amp;patientID={}\u0026amp;cdb\u0026amp;target=_self\u0026amp;access_token={}\nIID_STUDY_URL=../../weasis-pacs-connector/weasis?\u0026amp;studyUID={}\u0026amp;cdb\u0026amp;target=_self\u0026amp;access_token={}   Secured from 5.22.2 IID_PATIENT_URL=../../weasis-pacs-connector/weasis?patientID={{patientID}}\u0026amp;access_token={{access_token}}\nIID_STUDY_URL=../../weasis-pacs-connector/weasis?studyUID={{studyUID}}\u0026amp;access_token={{access_token}} IID_URL_TARGET=_self   Secured* from 5.22.2 IID_PATIENT_URL=../../weasis-pacs-connector/weasis?patientID={{patientID}}\u0026amp;cdb\u0026amp;access_token={{access_token}}\nIID_STUDY_URL=../../weasis-pacs-connector/weasis?studyUID={{studyUID}}\u0026amp;cdb\u0026amp;access_token={{access_token}} IID_URL_TARGET=_self     * Running only the local native version of Weasis (when not connected to a remote version - weasis.war -)\n For dcm4chee-web3   Install dcm4chee (2.18.3 recommended), if not already done. For security see also how to limit the server access.\n  Go here and download these following files. Download issue: Some browsers (like Internet Explorer) may rename war files to zip. If so, use the Save As option when downloading and change the name back to war.\n  From weasis-pacs-connector folder:  [weasis-pacs-connector.war] Requires the latest version 6.x, the version 7.x is not supported [dcm4chee-web-weasis.jar]   From the folder with the latest version number (Optional if you want to run only the native version installed on the client system):  [weasis.war] requires at least Weasis 3.5.3 [weasis-i18n.war] Optional for internationalization [weasis-ext.war] Optional package for additional plug-ins (e.g. exporting the images to build an ISO image for CD/DVD)      Place these files in the dcm4chee deploy folder (server/default/deploy/).\n  To activate Weasis, go to the JMX console (at http://\u0026lt;your-host\u0026gt;:8080/jmx-console)\n In dcm4chee.web select service=WebConfig and set these two values: WebviewerNames = weasis WebviewerBaseUrl = weasis:/weasis-pacs-connector/weasis This configuration allows launching Weasis with the weasis protocol that requires the installation of the native client..\n  Click the Apply Changes button    Configure Weasis (This step is optional if you just want to keep the default configuration. It is required when the AETitle DCM4CHEE has been changed) The default configuration is stored in two files inside weasis-pacs-connector.war. To override the default configuration:\n   Download the current weasis-connector-default.properties and rename it weasis-pacs-connector.properties, and download dicom-dcm4chee.properties (configuration of the dcm4chee archive)\n  Copy the files into a folder in the classpath of the servlet container. In JBoss (inferior to version 7), the best location would typically be server/default/conf.\n  Edit the configuration as needed. For example, dcm4chee may be running on a different computer than Weasis, or the AE Title of dcm4chee may have been changed.\nIf so, edit weasis-pacs-connector.properties or dicom-dcm4chee.properties (e.g. pacs.host, pacs.port, pacs.aet\u0026hellip;)\n    That\u0026rsquo;s all, now restart dcm4chee. To launch the viewer from the dcm4chee-web3 portal, the client computer must have installed the Weasis package on the operating system.\n  "
},
{
	"uri": "https://nroduit.github.io/en/old/dcm4chee/",
	"title": "Embedding in dcm4chee (deprecated)",
	"tags": [],
	"description": "How installing Weasis to be the default web viewer of dcm4chee web interface",
	"content": "This page describes how installing Weasis to be the default web viewer of dcm4chee web interface.\nWeasis is launched from the dcm4chee administrative web interface with Java Webstart, as shown in the pictures below. It may also be copied to a CD (or other removable devices) with images.\nUse the weasis protocol instead of Java Web Start because it has been removed from Java 11 release and because the end of public Oracle Java 8 updates from April 2019.\nPrefer this page instead.\n    Weasis in dcm4chee-arc-light\n      Weasis in dcm4chee-web3\n      Weasis in dcm4chee-web\n                                For dcm4chee-arc-light   Install dcm4chee, if not already done.\n  Go here and download these Weasis files. Download issue: Some browsers (Internet Explorer) may rename war files to zip. If so, use the Save As option when downloading and change the name back to war.\n  From the folder with the latest version number:  weasis.war weasis-i18n.war (Optional for internationalization)   From weasis-pacs-connector folder:  the latest version of weasis-pacs-connector.war      Open the wildfly management console (at http://\u0026lt;your-host\u0026gt;:9990).\n Select the “Deployments” tab Add the .war files using the “Add” button (Choose Upload a new deployment or select Replace when the file already exists)    Configure weasis-pacs-connector 6.x and superior. The default configuration is stored in two files inside weasis-pacs-connector.war . To override the default configuration:\n  Download the current weasis-pacs-connector.properties and dicom-dcm4chee-arc.properties (configuration of the dcm4chee archive)\n  Edit the configuration as needed. For example, dcm4chee may be running on a different computer than Weasis, or the AE Title of dcm4chee may have been changed. If so, edit weasis-pacs-connector.properties or dicom-dcm4chee-arc.properties (Change pacs.host, pacs.port, and pacs.aet).\n  Copy weasis-pacs-connector.properties and dicom-dcm4chee-arc.properties into wildfly/standalone/configuration. With the docker installation use the docker copy command: docker cp \u0026hellip; Instead of copying the files into wildfly/standalone/configuration, JBoss Command Line Interface Console can be used to override files in the war. Add the two configuration files with the deployment-overlay command:\n deployment-overlay add --name=dcm4chee-arc --deployments=weasis-pacs-connector.war --content=WEB-INF/classes/weasis-pacs-connector.properties=/tmp/weasis-pacs-connector.properties,WEB-INF/classes/dicom-dcm4chee-arc.properties=/tmp/dicom-dcm4chee-arc.properties --redeploy-affected   For applying the new configuration, from the management console \u0026ldquo;Disable\u0026rdquo; weasis-pacs-connector.war and then \u0026ldquo;Enable\u0026rdquo;\n  Optional: add new properties or arguments in the JNLP file, see the configuration of weasis-pacs-connector\n    To activate Weasis in dcm4chee-arc-light user interface (required 5.10.2 or superior), you need need to changes two attributes in the configuration\n    Add the following properties from the left menu Configuration \u0026gt; Devices \u0026gt; dcm4chee-arc \u0026gt; Extensions \u0026gt; Edit extension \u0026gt; Child Objects \u0026gt; Web Applications \u0026gt; DCM4CHEE (add \u0026amp;cdb to the URL if weasis.war has not been deployed on the server-side):   IID_PATIENT_URL=../../weasis-pacs-connector/viewer?\u0026amp;patientID={}\u0026amp;target=_self\u0026amp;access_token={}\n  IID_STUDY_URL=../../weasis-pacs-connector/viewer?\u0026amp;studyUID={}\u0026amp;target=_self\u0026amp;access_token={} Absolute path: The values above starting by \u0026ldquo;../\u0026rdquo; are the default relative path when weasis-pacs-connector is installed in the same JBoss as dcm4chee. Otherwise replace the relative URL by an absolute value, ex: http://\u0026lt;your-host\u0026gt;:8080/weasis-pacs-connector/...\n The new way of launching Java Westart file (jnlp) will also require an absolute URL as the scheme of the URL is different:\njnlp://\u0026lt;your-host\u0026gt;:8080/weasis-pacs-connector/...\njnlps://\u0026lt;your-host\u0026gt;:8443/weasis-pacs-connector/... (TLS connection)\nReplace \u0026ldquo;\u0026lt;your-host\u0026gt;\u0026rdquo; with your server hostname\n   Refresh the web page and the view button should appear as in the screenshot above\n  An alternative way to configure the activation is with an LDAP manager (like Apache Directory Studio)\n Connect to LDAP, see dcm4chee configuration Import weasis.ldif       For dcm4chee-web3   Install dcm4chee, if not already done. For security see also how to limit the server access.\n dcm4chee-web3 is not compatible with versions of dcm4chee before 2.16.0 dcm4chee 2.16.0 to 2.17.0 are compatible with dcm4chee-web3, but the older dcm4chee-web is installed by default. For dcm4chee 2.17.1+, dcm4chee-web3 is already installed. To check if it is the latest version, start dcm4chee-web3 (http://\u0026lt;your-host\u0026gt;:8080/dcm4chee-web3/), log in, and mouse over the dcm4chee.org icon in the upper right corner.    Go here and download these Weasis files. Download issue: Some browsers (Internet Explorer) may rename war files to zip. If so, use the Save As option when downloading and change the name back to war.\n  From the folder with the latest version number:  weasis.war weasis-i18n.war (Optional for internationalization)   From weasis-pacs-connector folder:  dcm4chee-web-weasis.jar weasis-pacs-connector.war (requires the version 6.1.x, the version 7.x is not supported)      Place these files in the dcm4chee deploy folder (server/default/deploy/).\n  To activate Weasis, go to the JMX console (at http://\u0026lt;your-host\u0026gt;:8080/jmx-console)\n  In dcm4chee.web select service=WebConfig and set these two values: WebviewerNames = weasis WebviewerBaseUrl = NONE From weasis-pacs-connector 5.0 WebviewerBaseUrl can have different values:\n  Launch Weasis as an external application (default value when NONE): WebviewerBaseUrl = weasis:/weasis-pacs-connector/viewer\n  Launch Weasis as an Applet in the web browser (not recommended as several browsers block Java plugin) : WebviewerBaseUrl = weasis:/weasis-pacs-connector/viewer-applet\n  Launching Weasis from jnlp protocol. The new way of launching Java Westart file (jnlp) will require an absolute URL:\n weasis:jnlp://\u0026lt;your-host\u0026gt;:8080/weasis-pacs-connector/viewer weasis:jnlps://\u0026lt;your-host\u0026gt;:8443/weasis-pacs-connector/viewer Replace \u0026ldquo;\u0026lt;your-host\u0026gt;\u0026rdquo; with your server hostname\n   From dcm4chee 2.18.3, it possible to reuse the default host name of dcm4chee:\n weasis:jnlp://${server.host}:8080/weasis-pacs-connector/viewer weasis:jnlps://${server.host}:8443/weasis-pacs-connector/viewer      Click the Apply Changes button\n    Configure Weasis (This step is optional if you just want to keep the default configuration. It is required when the AETitle DCM4CHEE has been changed) The default configuration is stored in two files inside weasis-pacs-connector.war. To override the default configuration:\n  According to the version of weasis-pacs-connector:\n  weasis-pacs-connector 4.x and 5.x: Download weasis-connector-default.properties and rename it weasis-pacs-connector.properties\n  weasis-pacs-connector 6.x: Download the current weasis-connector-default.properties and rename it weasis-pacs-connector.properties, and download dicom-dcm4chee.properties (configuration of the dcm4chee archive)\n    Copy the files into a folder in the classpath of the servlet container. In JBoss (inferior to version 7), the best location would typically be server/default/conf.\n  Edit the configuration as needed. For example, dcm4chee may be running on a different computer than Weasis, or the AE Title of dcm4chee may have been changed.\nIf so, edit weasis-pacs-connector.properties or dicom-dcm4chee.properties for weasis-pacs-connector 6.x. Edit the properties: pacs.host, pacs.port, pacs.aet\u0026hellip;\n  Optional: add new properties or arguments in the JNLP file, see configuration of weasis-pacs-connector\n    That\u0026rsquo;s all, now restart dcm4chee and launch Weasis from the dcm4chee-web3 portal.\n   For dcm4chee-web (old web interface - before 2.17.1)   Go here and download:\n The last Weasis version: weasis.war The Weasis internationalization (translation): weasis-i18n.war (optional) The modified dcm4chee web interface dcm4chee-web/version/dcm4chee-web.war) dcm4chee version: dcm4chee-web.war has been built only for some dcm4chee versions. For other versions see rebuild dcm4chee-web from any version.\n     Place these three files into the deploy folder (server/default/deploy/) of dcm4chee.\n  Modify the permission in /dcm4jboss-web/src/etc/conf/dcm4chee-web/folder.permissions or in server/default/conf/dcm4chee-web if dcm4chee is already installed:\n folder.*=edit,move,delete,view,*export,edit.newStudyUID,mergepat,study_permission,study_permission.free_role_action,query_has_issuer folder.*export=export_tf,export_xds\n\u0026hellip;\nfolder=WebUser(send,view);DatacareUser(edit,move,delete,export_xds,view);WebAdmin(*)\n   That\u0026rsquo;s all, now restart dcm4chee and launch Weasis from the web portal.\n   Write weasis-portable to DICOM CDs with dcm4chee-cdw  Install dcm4chee-cdw (see doc/INSTALL.txt in the archive) Extract weasis-portable.zip into the ../dcm4chee/server/default/data/mergedir directory Go to the dcm4che jmx console (dcm4chee.cdw):  Select the MediaCreationMgtSCP item and set to true the value of DefaultIncludeDisplayApplication Select the MakeIsoImage item and set to 4 the value of isoLevel   Click on the Apply Changes button Embedding a Java Runtime for Windows: The executable (viewer-win32.exe) allows to embed a JRE in the relative directory \u0026ldquo;jre/windows\u0026rdquo; (e.g. weasis-portable/jre/windows/bin/java.exe). To support 32 and 64-bit architecture, copy 32-bit Java Runtime from its installed directory.\nNote: the embedded Java Runtime is used only when no runtime is available on the system. When Java is run from CD, it could be a little slow.\n   "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/integration/",
	"title": "Integration",
	"tags": [],
	"description": "How connecting Weasis to a PACS, RIS, EMR or any web interface",
	"content": "How to launch Weasis from any environments Here we present how to launch Weasis with associated images from any context either using weasis-pacs-connector or by building your own connector. The launch of the application is based on the weasis protocol available since version 3.5. However, it is still possible to use weasis 3.5 with Java Webstart (but only with Java 8 to 10), see the old documentation.\nUsing weasis-pacs-connector allows a high degree of integration and facilitates connection to a PACS. Here are some of the advantages:\n Automatically build a manifest according to a configuration with a PACS The initial URL starts with HTTP and is then redirected to weasis:// (as weasis:// is not allowed by wiki, blog…) Manages to build the manifest simultaneously with the start of Weasis The URL returns a manifest ID which can be requested only once (and must be consumed within 5 min)  However, it is possible to build your own connector for particular integrations or when a DICOMWeb service is available.\nRequires Weasis 3.5 (or superior) installed on the system with a native installer.\n Use weasis-pacs-connector For connecting to dcm4chee web interface, follow the instructions in Installing Weasis in DCM4CHEE. Otherwise, refer to the documentation of weasis-pacs-connector.\nStandard workflow when connecting Weasis to a PACS, RIS, EMR, EPR or any web interface:\nPACSLauncherDICOMQueryWeasisConfig(Configurationoftheuserpreferencesandthelauncherparameters)XMLmanifestBuilder(asynchronoustask,\u0026#160;startinstep2andreturndirectlyanURLwithanIDorder)2.manifestbuilderURL3.URLredirectionintoweasisprotocol(weasis://parameters)DownloadManager(ReadXMLmanifest)1.Request(URLwithUIDs,includeInvokeImageDisplayIHEProfile)6.GetDICOMfilesbyWADO5.GetthemanifestWeasisweasis-pacs-connectorClient(oranywebordesktopapplications)dcm4cheewebui4.Executeweasisprotocol  The schema above shows that the queries to the PACS are made at the same time as the viewer starts. This makes it possible to optimize the launch by simultaneously launching weasis and creating the manifest.\n weasis-pacs-connector services allow either to build a manifest from a PACS via DICOM C-Find or to upload the manifest by http POST.\n Build your own connector This documentation describes how to create your own connector without weasis-pacs-connector and with different DICOM archive types. The weasis protocol allows to build URIs to launch Weasis according to different configurations and allows to load DICOM files locally or remotely.\nHere are examples with XML manifests or with DICOMWeb RESTful services.\nBuild an XML manifest Use $dicom:get to load a XML manifest returned by your service. $dicom:get -w https://myservice/manifest?studyUID=2.16.756.5.5.100.397184556.14391.1373576413.1508\nBuild an XML file containing the UIDs of the images which will be retrieved from Weasis. There is XLS to validate the content of xml. This output file can be either compressed in gzip or uncompressed. Here is an example: \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;manifest xmlns=\u0026#34;http://www.weasis.org/xsd/2.5\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; \u0026lt;arcQuery additionnalParameters=\u0026#34;\u0026#34; arcId=\u0026#34;1001\u0026#34; baseUrl=\u0026#34;http://archive-weasis.rhcloud.com/archive/wado\u0026#34; requireOnlySOPInstanceUID=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;Patient PatientID=\u0026#34;H13885_9M\u0026#34; PatientName=\u0026#34;TEST NON SQUARE PIXELS\u0026#34; PatientSex=\u0026#34;F\u0026#34;\u0026gt; \u0026lt;Study AccessionNumber=\u0026#34;\u0026#34; ReferringPhysicianName=\u0026#34;\u0026#34; StudyDate=\u0026#34;20130711\u0026#34; StudyDescription=\u0026#34;TEST NON SQUARE PIXELS\u0026#34; StudyID=\u0026#34;PKD\u0026#34; StudyInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.14391.1373576413.1508\u0026#34; StudyTime=\u0026#34;170013\u0026#34;\u0026gt; \u0026lt;Series Modality=\u0026#34;US\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL ASPECT RATIO\u0026#34; SeriesInstanceUID=\u0026#34;1.2.40.0.13.1.1.87878503032592846377547034671833520632\u0026#34; SeriesNumber=\u0026#34;2\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;107\u0026#34; SOPInstanceUID=\u0026#34;1.2.40.0.13.1.1.126082073005720329436273995268222863740\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;Series Modality=\u0026#34;MR\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL SPACING\u0026#34; SeriesInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1\u0026#34; SeriesNumber=\u0026#34;40001\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.0\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.1\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.2\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;4\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.3\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;Series Modality=\u0026#34;MR\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL SPACING\u0026#34; SeriesInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2\u0026#34; SeriesNumber=\u0026#34;50001\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.0\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.1\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.2\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;4\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.3\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;/Study\u0026gt; \u0026lt;/Patient\u0026gt; \u0026lt;/arcQuery\u0026gt; \u0026lt;/manifest\u0026gt; Important Parameters (except mandatory parameters defined in xsd):\n PatientBirthDate helps to identify a patient. StudyDate, StudyTime, Modality, SeriesNumber and InstanceNumber help to sort data before downloading images. SeriesDescription and StudyDescription allow to immediately display the descriptions before downloading the images.   From Weasis 2.5 it is possible to have multiple archives (allows to have several arcQuery tags) and the presentations tag which contains the image annotations.\n Build an XML manifest (no WADO server) This example requires only a WEB server. Weasis will download DICOM files by URLs.\nUse $dicom:get to load a XML manifest containing direct links Launch $dicom:get -w https://nroduit.github.io/samples/Lumbar/mf.xml\nRequired Parameters:\n DirectDownloadFile defines the URL of the DICOM file to download (the final URL is the combination of wadoURL + DirectDownloadFile) DirectDownloadThumbnail defines the URL of the JPEG file representing the series (the final URL is the combination of wadoURL + DirectDownloadThumbnail) See in the previous note above.   Download directly with DICOMWeb RESTful services This integration requires a PACS/VNA with DICOMweb™ services (QUERY/RETRIEVE) where the requests are managed directly by Weasis. Here are some of the advantages:\n Straightforward integration Do not require to install weasis-pacs-connector Allow passing token directly in headers (not in the URL)  Use $dicom:rs to load DICOM files. Here are some configurations of open source systems:\ndcm4chee-arc-light This configuration requires at least dcm4chee-arc-light 5.22.2 and Weasis 3.6.0. To activate Weasis in dcm4chee-arc-light user interface, you need to add the four following properties in the web portal from the left menu Configuration \u0026gt; Devices \u0026gt; dcm4chee-arc \u0026gt; Extensions \u0026gt; Edit extension \u0026gt; Child Objects \u0026gt; Web Applications \u0026gt; DCM4CHEE IID_PATIENT_URL=weasis://$dicom:rs --url \u0026#34;{{qidoBaseURL}}{{qidoBasePath}}\u0026#34; -r \u0026#34;patientID={{patientID}}\u0026#34; --query-ext \u0026#34;\u0026amp;includedefaults=false\u0026#34; -H \u0026#34;Authorization: Bearer {{access_token}}\u0026#34; IID_STUDY_URL=weasis://$dicom:rs --url \u0026#34;{{qidoBaseURL}}{{qidoBasePath}}\u0026#34; -r \u0026#34;studyUID={{studyUID}}\u0026#34; --query-ext \u0026#34;\u0026amp;includedefaults=false\u0026#34; -H \u0026#34;Authorization: Bearer {{access_token}}\u0026#34; IID_URL_TARGET=_self\nThe properties can also be passed directly to the docker-compose.env file: IID_PATIENT_URL=weasis://$dicom:rs --url \u0026#34;{{qidoBaseURL}}{{qidoBasePath}}\u0026#34; -r \u0026#34;patientID={{patientID}}\u0026#34; --query-ext \u0026#34;\\\u0026amp;includedefaults=false\u0026#34; -H \u0026#34;Authorization: Bearer {{access_token}}\u0026#34; IID_STUDY_URL=weasis://$dicom:rs --url \u0026#34;{{qidoBaseURL}}{{qidoBasePath}}\u0026#34; -r \u0026#34;studyUID={{studyUID}}\u0026#34; --query-ext \u0026#34;\\\u0026amp;includedefaults=false\u0026#34; -H \u0026#34;Authorization: Bearer {{access_token}}\u0026#34; IID_URL_TARGET=_self\nConfiguration notes:\n See configuration for versions before 5.22.2. The character \u0026lsquo;\u0026amp;\u0026rsquo; must be escaped in the Docker environment variables. The Authorization header is not required for unsecure service. URL with HTTPS requires a real valid certificate; otherwise, the certificate must be imported into the Weasis Java keystore. For testing purposes in secure mode, you can use the HTTP URL if it is mapped in the OIDC client of keycloack (\u0026ndash;url \u0026ldquo;http://:8080/dcm4chee-arc/aets/DCM4CHEE/rs\u0026rdquo;).   Finally, refresh the page for having the viewer button.\nOrthanc WEB Server https://www.orthanc-server.com/static.php?page=dicomweb\n$dicom:rs --url \u0026#34;https://demo.orthanc-server.com/dicom-web\u0026#34; -r \u0026#34;patientID=ozp00SjY2xG\u0026#34; Launch\nCurrently, the DICOMWeb service of Orthanc doesn\u0026rsquo;t support:\n Thumbnail service is not implemented.  Google Cloud Healthcare API https://cloud.google.com/healthcare/docs/how-tos/dicomweb\n$weasis:config pro=\u0026#34;dicom.qido.query.multi.params true\u0026#34; $dicom:rs --url \u0026#34;https://healthcare.googleapis.com/v1beta1/projects/chc-nih-chest-xray/locations/us-central1/datasets/nih-chest-xray/dicomStores/nih-chest-xray/dicomWeb\u0026#34; -r \u0026#34;studyUID=1.3.6.1.4.1.11129.5.5.184301693334578016850836775758484230512396\u0026#34; -H \u0026#34;Authorization: Bearer \u0026lt;your-token\u0026gt;\u0026#34; Currently, the DICOMWeb service for getting thumbnails doesn\u0026rsquo;t work in the Google API.\n\u0026lt;your-token\u0026gt; must be replaced by the hostname of your dcm4che installation.\n DICOMcloud (for Azure cloud) https://github.com/DICOMcloud/DICOMcloud\n$dicom:rs --url \u0026#34;https://dicomcloud.azurewebsites.net/api\u0026#34; -r \u0026#34;studyUID=1.2.840.113619.2.25.1.1762157631.873231884.123\u0026#34; -r \u0026#34;studyUID=1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.3.0\u0026#34; Launch\nCurrently, the DICOMWeb service of DICOMcloud doesn\u0026rsquo;t support:\n Thumbnail service is not implemented.  "
},
{
	"uri": "https://nroduit.github.io/en/basics/architecture/",
	"title": "Weasis Architecture",
	"tags": [],
	"description": "Modular architecture of Weasis",
	"content": "Weasis has a modular architecture based on OSGi: the dynamic module system for Java. It uses the Apache Felix OSGi framework which is an open source implementation of the OSGi Release 4.2 specification (OSGi Certified).\nThe following schemas show the main different plug-in types (bundle in OSGi language) and their relationships. Viewer, Viewer Tool Pane, Tool Bar, Data Explorer and Codec bundles are registered dynamically by the Declarative Services (a way to push or to consume services in OSGi environment).\nFor each bundle, translation files are packaging in a separated bundle ending by “i18n” called a bundle fragment (OSGi concept) which is merged during runtime to the application. In this way, translation can be handled separately and they are automatically loaded by the application when they are available.\nSome Codec bundles also have bundle fragments. Those fragments contain native libraries (JNI wrapping). The Weasis launcher enables downloading and loading only the native binaries related to the running platform.\n"
},
{
	"uri": "https://nroduit.github.io/en/old/integration/",
	"title": "Integration (deprecated)",
	"tags": [],
	"description": "How connecting Weasis to a PACS, RIS, EMR or any web interface",
	"content": "How to launch Weasis from any environments There are two Weasis distributions: the WEB distribution (weasis.war) and the portable distribution (weasis-portable.zip). Here we are presenting how to connect the WEB distribution with any web application. This documentation is adapted for Weasis 2.5 and superior working with Java Webstart. The easiest way to launch Weasis from a web context is to use weasis-pacs-connector.\nUse the weasis protocol instead of Java Web Start because it has been removed from Java 11 release and because the end of public Oracle Java 8 updates from April 2019.\nPrefer this page instead.\n For connecting to dcm4chee web interface, follow the instructions in Installing Weasis in DCM4CHEE.\n Use weasis-pacs-connector Standard workflow when connecting Weasis to a PACS, RIS, EMR or any web interface: The schema above shows that the queries to the PACS are made at the same time the viewer starting.\n Workflow where the manifest is embedded in the jnlp file (synchrone processes): Build your connector This method has two requirements:\n Building a JNLP file for launching Weasis Building a XML manifest to download images  Build a JNLP Build a Java Webstart file (.jnlp) for launching Weasis. This file has at least one dynamic parameter (\u0026lt;argument\u0026gt;$dicom:get ... \u0026lt;/argument\u0026gt;) to download images. Generally, it is the XML file containing the UIDs. \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE jnlp PUBLIC \u0026#34;-//Sun Microsystems, Inc//DTD JNLP Descriptor 6.0//EN\u0026#34; \u0026#34;http://java.sun.com/dtd/JNLP-6.0.dtd\u0026#34;\u0026gt; \u0026lt;jnlp spec=\u0026#34;1.6+\u0026#34; codebase=\u0026#34;http://localhost:8080/weasis\u0026#34; href=\u0026#34;\u0026#34;\u0026gt; \u0026lt;information\u0026gt; \u0026lt;title\u0026gt;Weasis\u0026lt;/title\u0026gt; \u0026lt;vendor\u0026gt;Weasis Team\u0026lt;/vendor\u0026gt; \u0026lt;description\u0026gt;DICOM images viewer\u0026lt;/description\u0026gt; \u0026lt;description kind=\u0026#34;short\u0026#34;\u0026gt;An application to visualize and analyze DICOM images.\u0026lt;/description\u0026gt; \u0026lt;description kind=\u0026#34;one-line\u0026#34;\u0026gt;DICOM images viewer\u0026lt;/description\u0026gt; \u0026lt;description kind=\u0026#34;tooltip\u0026#34;\u0026gt;Weasis\u0026lt;/description\u0026gt; \u0026lt;/information\u0026gt; \u0026lt;security\u0026gt; \u0026lt;all-permissions /\u0026gt; \u0026lt;/security\u0026gt; \u0026lt;resources\u0026gt; \u0026lt;!-- Requires Java SE 8 for Weasis 2.5 and superior --\u0026gt; \u0026lt;java version=\u0026#34;9+\u0026#34; href=\u0026#34;http://java.sun.com/products/autodl/j2se\u0026#34; java-vm-args=\u0026#34;--add-modules java.xml.bind --add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.file=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.desktop/javax.imageio.stream=ALL-UNNAMED --add-opens=java.desktop/javax.imageio=ALL-UNNAMED --add-opens=java.desktop/com.sun.awt=ALL-UNNAMED\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;java version=\u0026#34;9+\u0026#34; java-vm-args=\u0026#34;--add-modules java.xml.bind --add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.file=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.desktop/javax.imageio.stream=ALL-UNNAMED --add-opens=java.desktop/javax.imageio=ALL-UNNAMED --add-opens=java.desktop/com.sun.awt=ALL-UNNAMED\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;j2se version=\u0026#34;1.8+\u0026#34; href=\u0026#34;http://java.sun.com/products/autodl/j2se\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;j2se version=\u0026#34;1.8+\u0026#34; initial-heap-size=\u0026#34;128m\u0026#34; max-heap-size=\u0026#34;768m\u0026#34; /\u0026gt; \u0026lt;jar href=\u0026#34;http://localhost:8080/weasis/weasis-launcher.jar\u0026#34; main=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;jar href=\u0026#34;http://localhost:8080/weasis/felix.jar\u0026#34; /\u0026gt; \u0026lt;!-- Optional library (Substance Look and feel, only since version 1.0.8). Requires the new Java Plug-in introduced in the Java SE 6 update 10 release.For previous JRE 6, substance.jnlp needs a static codebase URL --\u0026gt; \u0026lt;extension href=\u0026#34;http://localhost:8080/weasis/substance.jnlp\u0026#34; /\u0026gt; \u0026lt;!-- Allows to get files in pack200 compression, only since Weasis 1.1.2 --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.packEnabled\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;!-- ================================================================================================================= --\u0026gt; \u0026lt;!-- Security Workaround. Add prefix \u0026#34;jnlp.weasis\u0026#34; for having a fully trusted application without signing jnlp (only since weasis 1.2.9), http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6653241 --\u0026gt; \u0026lt;!-- Required parameter. Define the location of config.properties (the OSGI configuration and the list of plug-ins to install/start) --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.felix.config.properties\u0026#34; value=\u0026#34;http://localhost:8080/weasis/conf/config.properties\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Define the location of ext-config.properties (extend/override config.properties) --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.felix.extended.config.properties\u0026#34; value=\u0026#34;http://localhost:8080/weasis-ext/conf/ext-config.properties\u0026#34; /\u0026gt; \u0026lt;!-- Required parameter. Define the code base of Weasis for the JNLP --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.codebase.url\u0026#34; value=\u0026#34;http://localhost:8080/weasis\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Define the code base ext of Weasis for the JNLP --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.codebase.ext.url\u0026#34; value=\u0026#34;http://localhost:8080/weasis-ext\u0026#34; /\u0026gt; \u0026lt;!-- Required parameter. OSGI console parameter --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.gosh.args\u0026#34; value=\u0026#34;-sc telnetd -p 17179 start\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Allows to have the Weasis menu bar in the top bar on Mac OS X (works only with the native Aqua look and feel) --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.apple.laf.useScreenMenuBar\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;!-- Optional parameter. Allows to get plug-ins translations --\u0026gt; \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.i18n\u0026#34; value=\u0026#34;http://localhost:8080/weasis-i18n\u0026#34; /\u0026gt; \u0026lt;!-- Optional Weasis Documentation --\u0026gt; \u0026lt;!-- \u0026lt;property name=\u0026#34;jnlp.weasis.weasis.help.url\u0026#34; value=\u0026#34;${cdb}/../weasis-doc\u0026#34; /\u0026gt; --\u0026gt; \u0026lt;!-- ================================================================================================================= --\u0026gt; \u0026lt;/resources\u0026gt; \u0026lt;application-desc main-class=\u0026#34;org.weasis.launcher.WebstartLauncher\u0026#34;\u0026gt; \u0026lt;!-- Example for opening dicom files from remote xml file --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -w \u0026#34;http://localhost:8080/dcm4chee-web/wadoQueries/wado_query3888637380.xml.gz\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;!-- Example for opening dicom files from a local folder --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -l \u0026#34;/home/Images/MRIX LUMBAR/\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;!-- Example for opening dicom files by embedding the xml file encoded in gzip and then in base64, it must be in one line without space at the beginning --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -i \u0026#34;H4sIAAAAAAAAALVV7Y+aMBz+vr+i6XdLXwDBHHdxpy4mvgX0dvtkOqnaBOGO1qn//RUQnW5uy3JHCC2/1+d5Wsrdw36TgB8iVzJLA0gQhkCkiyyW6SqAW71seBA83H+62/E4m79uR...\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;!-- Example for opening dicom files from URLs --\u0026gt; \u0026lt;argument\u0026gt;$dicom:get -r \u0026#34;http://server/images/img1.dcm http://server/images/img2.dcm\u0026#34;\u0026lt;/argument\u0026gt; \u0026lt;/application-desc\u0026gt; \u0026lt;/jnlp\u0026gt; Replace http://localhost:8080/weasis with your server location and \u0026lt;argument\u0026gt;...\u0026lt;/argument\u0026gt; with your data to load. Adapt other parameters if necessary.\n weasis-pacs-connector services are based on jnlp templates and they allow either to build a manifest from a PACS via DICOM C-Find or to upload the manifest by http POST.\n Build an XML manifest Build an XML file containing the UIDs of the images which will be retrieved from Weasis. There is XLS to validate the content of xml. This file can be either compressed in gzip or uncompressed. Here is an example (required Weasis 2.5 and superior): \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;manifest xmlns=\u0026#34;http://www.weasis.org/xsd/2.5\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; \u0026lt;arcQuery additionnalParameters=\u0026#34;\u0026#34; arcId=\u0026#34;1001\u0026#34; baseUrl=\u0026#34;http://archive-weasis.rhcloud.com/archive/wado\u0026#34; requireOnlySOPInstanceUID=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;Patient PatientID=\u0026#34;H13885_9M\u0026#34; PatientName=\u0026#34;TEST NON SQUARE PIXELS\u0026#34; PatientSex=\u0026#34;F\u0026#34;\u0026gt; \u0026lt;Study AccessionNumber=\u0026#34;\u0026#34; ReferringPhysicianName=\u0026#34;\u0026#34; StudyDate=\u0026#34;20130711\u0026#34; StudyDescription=\u0026#34;TEST NON SQUARE PIXELS\u0026#34; StudyID=\u0026#34;PKD\u0026#34; StudyInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.14391.1373576413.1508\u0026#34; StudyTime=\u0026#34;170013\u0026#34;\u0026gt; \u0026lt;Series Modality=\u0026#34;US\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL ASPECT RATIO\u0026#34; SeriesInstanceUID=\u0026#34;1.2.40.0.13.1.1.87878503032592846377547034671833520632\u0026#34; SeriesNumber=\u0026#34;2\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;107\u0026#34; SOPInstanceUID=\u0026#34;1.2.40.0.13.1.1.126082073005720329436273995268222863740\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;Series Modality=\u0026#34;MR\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL SPACING\u0026#34; SeriesInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1\u0026#34; SeriesNumber=\u0026#34;40001\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.0\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.1\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.2\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;4\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578035.1.3\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;Series Modality=\u0026#34;MR\u0026#34; SeriesDescription=\u0026#34;NON SQUARE PIXELS: PIXEL SPACING\u0026#34; SeriesInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2\u0026#34; SeriesNumber=\u0026#34;50001\u0026#34;\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.0\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.1\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.2\u0026#34;/\u0026gt; \u0026lt;Instance InstanceNumber=\u0026#34;4\u0026#34; SOPInstanceUID=\u0026#34;2.16.756.5.5.100.397184556.7220.1373578664.2.3\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;/Study\u0026gt; \u0026lt;/Patient\u0026gt; \u0026lt;/arcQuery\u0026gt; \u0026lt;/manifest\u0026gt; Important Parameters (except mandatory parameters):\n PatientBirthDate helps to identify a patient. StudyDate, StudyTime, Modality, SeriesNumber and InstanceNumber help to sort data before downloading images. SeriesDescription and StudyDescription allow to immediately display the descriptions before downloading the images.   From Weasis 2.5 it is possible to have multiple archives (allows to have several arcQuery tags) and the presentations tag which contains the image annotations.\n Build an XML manifest (no WADO server) This example requires only a WEB server and Weasis 2.5 and superior. Weasis will download files by URLs. \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34; ?\u0026gt; \u0026lt;manifest xmlns=\u0026#34;http://www.weasis.org/xsd/2.5\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; \u0026lt;arcQuery additionnalParameters=\u0026#34;\u0026#34; arcId=\u0026#34;1001\u0026#34; baseUrl=\u0026#34;http://archive-weasis.rhcloud.com/archive/wado\u0026#34; requireOnlySOPInstanceUID=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;Patient PatientBirthDate=\u0026#34;20010901\u0026#34; PatientID=\u0026#34;017589\u0026#34; PatientName=\u0026#34;Validate WADAKOKOA\u0026#34;\u0026gt; \u0026lt;Study StudyDate=\u0026#34;20100421\u0026#34; StudyDescription=\u0026#34;胸部立位 Ｖ→Ｄ犬4\u0026#34; StudyInstanceUID=\u0026#34;1.2.392.200036.9107.500.11141010042100073\u0026#34; StudyTime=\u0026#34;113836\u0026#34;\u0026gt; \u0026lt;Series DirectDownloadThumbnail=\u0026#34;thumb_4563173729424544.jpg\u0026#34; Modality=\u0026#34;CR\u0026#34; SeriesDescription=\u0026#34;Ｖ→Ｄ犬4\u0026#34; SeriesInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.141010042100073.121\u0026#34; SeriesNumber=\u0026#34;1\u0026#34;\u0026gt; \u0026lt;Instance DirectDownloadFile=\u0026#34;image_4563173729424543.dcm\u0026#34; InstanceNumber=\u0026#34;1\u0026#34; SOPInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.20100421.114831.109.101410\u0026#34;/\u0026gt; \u0026lt;Instance DirectDownloadFile=\u0026#34;image_4563173729424544.dcm\u0026#34; InstanceNumber=\u0026#34;2\u0026#34; SOPInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.20100421.114828.234.101410\u0026#34;/\u0026gt; \u0026lt;Instance DirectDownloadFile=\u0026#34;image_4563173729424545.dcm\u0026#34; InstanceNumber=\u0026#34;3\u0026#34; SOPInstanceUID=\u0026#34;1.2.392.200036.9107.500.305.1410.20100421.114823.421.101410\u0026#34;/\u0026gt; \u0026lt;/Series\u0026gt; \u0026lt;/Study\u0026gt; \u0026lt;/Patient\u0026gt; \u0026lt;/arcQuery\u0026gt; \u0026lt;/manifest\u0026gt; Important Parameters:\n DirectDownloadFile defines the URL of the DICOM file to download (the final URL is the combination of wadoURL + DirectDownloadFile) DirectDownloadThumbnail defines the URL of the JPEG file representing the series (the final URL is the combination of wadoURL + DirectDownloadThumbnail) The same ones as above.   "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/weasis-protocol/",
	"title": "Weasis Web Protocol",
	"tags": [],
	"description": "How to launch Weasis from a web context",
	"content": "The web protocol allows to launch Weasis in a web context from a specific URI scheme: weasis://parameters\nRequires Weasis 3.5 (or superior) installed on the system with a native installer.\n How to use the weasis protocol  From a web page, just make a link starting with weasis:// (see below How to build an URI) Some web frameworks such as the wiki or the URL field of some browsers only support the standard protocols (http, ftp\u0026hellip;). To solve this problem, it is necessary to use a URL redirection starting with http like the one proposed in weasis-pacs-connector: http://\u0026lt;your-host\u0026gt;:8080/weasis-pacs-connector/weasis?patientID=TESTS\n  From the command line: # Windows $ start weasis://%24dicom%3Aget%20-w%20https%3A%2F%2Fnroduit.github.io%2Fsamples%2FLumbar%2Fmf.xml # Linux $ xdg-open weasis://%24dicom%3Aget%20-w%20https%3A%2F%2Fnroduit.github.io%2Fsamples%2FLumbar%2Fmf.xml # Mac OS X $ open weasis://%24dicom%3Aget%20-w%20https%3A%2F%2Fnroduit.github.io%2Fsamples%2FLumbar%2Fmf.xml  When first used in a browser, a popup appears to confirm the opening of the weasis protocol. On Windows, it is possible to make sure that this message never appears by adding a browser policy which allows the URI weasis://*\n- With IE/Edge the policy is applied by the native installer.\n- With Chrome the policy is applied by the native installer (Windows and Linux), see how to manage URLWhitelist (d).\n How to build an URI The URI scheme \u0026ldquo;weasis://\u0026rdquo; allows you to launch Weasis from the system\u0026rsquo;s URI handler while the URI path allows you to build Weasis commands.\nweasis-pacs-connector will help to build dynamically the manifest (the references of the images to be loaded) and the launch parameters (user, profile, plugins\u0026hellip;). It will also manage user preferences.\nTo build an URI (weasis://path) without weasis-pacs-connector, you must choose one or more commands, encode the commands, and add the scheme weasis:// as prefix. Here is an example of loading an image:\n Use $dicom:get to load an image from URL $dicom:get -r https://nroduit.github.io/samples/us-palette.dcm Format the URI path with a URL encoder %24dicom%3Aget%20-r%20https%3A%2F%2Fnroduit.github.io%2Fsamples%2Fus-palette.dcm Make a link by adding \u0026ldquo;weasis://\u0026rdquo; at the beginning Open the remote image  To load multiple remote images, it is recommended to use a manifest listing the references of the images to be loaded. The easiest way to dynamically build this manifest is to use weasis-pacs-connector. However, it is possible to build it differently with the following instructions.\n Examples to load images If you use weasis-pacs-connector, please refer to Launch Weasis.\n Use $dicom:get to load a static XML manifest containing direct links (without WADO server) Launch $dicom:get -w https://nroduit.github.io/samples/Lumbar/mf.xml Use $dicom:rs to load DICOM files with DICOMWeb RESTful services (see other examples) Launch $dicom:rs --url \u0026#34;https://demo.orthanc-server.com/dicom-web\u0026#34; -r \u0026#34;patientID=5Yp0E\u0026#34; Use $dicom:get to load an image from URL and remove all the previous images if Weasis is already open Launch $dicom:close --all $dicom:get -r https://nroduit.github.io/samples/us-palette.dcm Use $dicom:get to load multiple local folders and a remote image Launch $dicom:get -l \u0026#34;D:/DICOM/Overlay\u0026#34; -l \u0026#34;D:/DICOM/Shutter\u0026#34; -r https://nroduit.github.io/samples/us-palette.dcm Use $image:get to load a non DICOM image Launch $image:get -u https://user-images.githubusercontent.com/993975/59107662-6c9ed300-8939-11e9-83ee-28f2725f4ae1.jpg  Modify the launch parameters The command for modifying the configuration at launch is $weasis:config which can have different arguments:\n cdb is the Weasis web context (The URL of weasis.war). If the value is null, the weasis version installed from the native installer is used. In the weasis-pacs-connector configuration, the default value is defined by weasis.base.url. cdb-ext is the extension web context of Weasis (The URL of weasis-ext.war containing additionnal plugins). In the weasis-pacs-connector configuration, the default value is defined by weasis.ext.url. arg is an argument for the launcher. The value must start by $, like arg=\u0026quot;$dicom:close \u0026ndash;all\u0026quot; (Note: the value can also be directly in the base URI, outside $weasis:config). Single-valued argument but can be specified multiple times. pro is a property for the launcher containing a key and a value separate by a space. Single-valued property but can be specified multiple times. auth is the web authorization parameter wcfg is the URL the remote Weasis configuration service.  Here are some examples that modify the launcher properties without using weasis-pacs-connector:\n Configuration for launching Weasis Dicomizer Launch $weasis:config pro=\u0026#34;felix.extended.config.properties file:conf/ext-dicomizer.properties\u0026#34; pro=\u0026#34;gosh.port 17181\u0026#34; Change the user, by default is the one of the current system session. The local preferences are associated to a user. Launch $weasis:config pro=\u0026#34;weasis.user user2\u0026#34;  "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/dicom-explorer/",
	"title": "DICOM Explorer",
	"tags": [],
	"description": "Structure and display of Patients/Studies/Series",
	"content": "Structure and display of Patients/Studies/Series DICOM Explorer The DICOM Explorer is the panel on the left that displays the Patient/Study/Series representation defined in the DICOM standard.\nThe data displayed in the DICOM Explorer can be imported locally (from the Import/Open menu or by drag and drop) or remotely.\nPatient Level  Weasis allows multi-patient display. By default, when images are imported a tab with the patient\u0026rsquo;s name opens in the main area. A tab containing a multi-view layout can only display images from a single patient. Changing patients can be done either through the first combobox in the DICOM Explorer (see image above) or by selecting a tab in the main area. In the combobox the patients are sorted in alphabetical order regardless of case and according to the regional setting. Studies and Series are displayed within the same patient when the metadata Patient Name and Patient ID are the same. Otherwise new patients are displayed.  Study Level  An study contains one or more series (thumbnails) belonging to a patient. A line representing the study surrounds its series (see image above). The studies are sorted by reverse chronology (most recent first). If there is no study date then the studies are sorted alphabetically according to the Study Description. By default all the studies are displayed, however you can choose to display only one of them from the study combobox.  Series Level  A series is represented by a thumbnail that contains a certain number of images (number displayed at the bottom left). According to predefined rules, some series are separated into sub-series also represented by a thumbnail with a number preceded by \u0026lsquo;#\u0026rsquo; in the upper right corner. Series splitting is necessary for the consistency of some tools such as the MPR, cross-lines and synchronization of series. The sorting of the series is done by the serial number and if this last one is not present then in a chronological way by the date of the series or other dates. To open new series:  Drag and drop a thumbnail in the main area (if the series is dropped in a view of the same patient then the series is replaced otherwise a new tab is created). Double click or press return on an selected thumbnail (if a view of the same patient exists then the series in the view surrounded by an orange line is replaced) Select one or more thumbnails and choose an action from the \u0026ldquo;2D DICOM Viewer\u0026rdquo; context menu:  Open: Opens the series in the most appropriate layout (replaces the series if the patient\u0026rsquo;s tab already exists) Open in new tab: Opens the series in the most appropriate layout in a new tab. Open in screen: Opens the series in the most appropriate layout in a specific screen. Add: Adds the series to the current patient\u0026rsquo;s layout if exists.      "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/preferences/",
	"title": "Preferences",
	"tags": [],
	"description": "Manage the Weasis preferences",
	"content": "The WEB distribution (weasis.war) allows delivering preferences from the server-side to the client-side. Some preferences on the server-side are used by Weasis only during the first launch because they can be changed later in the Weasis user interface. The other preferences at the server-side are used by Weasis at every launch.\nLocal preferences can be changed by:\n The Weasis user interface: File \u0026gt; Preferences The weasis protocol with the command weasis:config and the pro parameter  Preferences on the server-side can be changed by:\n Replacing ext-config.properties which extends and overrides config.properties, see the tip below. Using query parameters in weasis-pacs-connector The weasis protocol with the command weasis:config and the pro parameter  How to modify ext-config.properties:\n Unzip weasis.war, modify the file and zip it again. It is also possible to change the default location of ext-config.properties with the Java property \u0026ldquo;felix.extended.config.properties\u0026rdquo; with the parameter cdb-ext of the weasis service. The ext-config.properties file can also be placed in a plugin package, see How to build and install a plug-in.   Priority order for loading a property Here is the priority order to set a property:\n Java System property providing from parameters of weasis:config or the launching URI) Property defined in weasis/conf/ext-config.properties or in weasis/conf/config.properties The default value of the property (see table below)  Example to change language property (It will work only during the first launch of Weasis on a user session, otherwise delete ${user.home}/.weasis/preferences/).\n If you are using weasis-pacs-connector, add the property locale.lang.code: http://localhost:8080/weasis-pacs-connector/weasis?patientID=9702672\u0026amp;pro=\u0026#34;locale.lang.code%20fr_CH\u0026#34; Add the property in weasis/conf/ext-config.properties: locale.lang.code=fr_CH The default value is \u0026ldquo;en_US\u0026rdquo;  List of preferences  GUI: if yes, the property can be modified in the Weasis user interface. Type: F: only caught at the first launch of the viewer. A: always caught by the viewer. AP: always caught by the viewer but only from ext-config.properties or config.properties .      Property Default value GUI Type Description     weasis.language en yes F Language code defined by ISO 639. Replaced by locale.lang.code in Weasis 2   weasis.country US yes F Country or region code defined by ISO 3166. Replaced by locale.lang.code in Weasis 2   weasis.variant  yes F Optional variant code. Replaced by locale.lang.code in Weasis 2   weasis.confirm.closing false (from 2.0.0) yes F Show a message of confirmation when closing the application.   weasis.look SubstanceTwilight AquaLookAndFeel (Mac) yes F Look and feel, if the Substance library is not loaded, Nimbus will be used by default.   weasis.look.${system} SubstanceTwilight AquaLookAndFeel (Mac) yes F Look and feel, specific to the platform (macosx, linux, windows).   weasis.show.disclaimer true no A Show a disclaimer (requires to be accepted to start the application) during the first launch of Weasis.   weasis.show.release true (from 2.0.0) no A Show a message when the release has changed   weasis.export.dicom true (from 1.2.5) no A Allows exporting DICOM files.   weasis.portable.dicom.cache true no A Cache the images imported from directories defined in weasis.portable.dicom.directory. If true, it is similar to the WEB import.   org.apache.sling.commons.log.level INFO yes F Sets the logging level of the loggers. This may be any of the defined logging levels TRACE, DEBUG, INFO, WARN, ERROR.   org.apache.sling.commons.log.file.activate false yes F Activate the log file. If this property is false, log messages are written to System.out. Since Weasis 2.0.4   org.apache.sling.commons.log.file.number 5 yes F The number of rotated files to keep.   org.apache.sling.commons.log.file.size 10MB yes F Defines how the log file is rotated by size.   org.apache.sling.commons.log.pattern {0,date,dd.MM.yyyy HH:mm:ss.SSS} *{4}* [{2}] {3} {5} no F Formatting log messages. java.util.MessageFormat pattern supporting up to six arguments: {0} The timestamp of type java.util.Date, {1} the log marker, {2} the name of the current thread, {3} the name of the logger, {4} the debug level and {5} the actual debug message.   ONLY from Weasis 2.0       locale.lang.code en yes F Language code (see Java Locale). If the value is \u0026ldquo;system\u0026rdquo; then the locale of the operating system will be used (client-side).   locale.format.code system yes F Format code for number and date (see Java Locale). If the value is \u0026ldquo;system\u0026rdquo; then the locale of the operating system will be used (client-side).   weasis.name Weasis no AP Change the name of the application everywhere in UI   weasis.profile default no AP Application profile, it allows having a custom preferences directory on the client side (will not shared preferences with other Weasis instances)   weasis.resources.url ${weasis.codebase.url}/resources.zip no A Application resource files (logo, presets, LUTs\u0026hellip;). \u0026ldquo;resources.zip\u0026rdquo; is downloaded again only when the last modified date has changed.   weasis.download.immediately true yes F Start to download series immediately   download.concurrent.series 3 no A The number of concurrent series downloads   download.concurrent.series.images 4 no A The number of concurrent image downloads in a series   audit.log false no A Audit log for giving statistics about usage of Weasis   weasis.color.wl.apply true yes F Allow to apply Window/Level on color images   weasis.dicom.root.uid 2.25 no A Set value for dicom root UID when creating DICOM objects (KO or PR). See company list.   {ui keys} true no A Make visible or not the Toolbars, Tools, some buttons, main menu and context menu items (see ext-config.properties file)   weasis.aet WEASIS_AE no A Calling AETitle for DICOM send and DICOM print   ONLY from Weasis 2.5.3       org.apache.sling.commons.log.stack.limit 3 yes F Defines the maximum number of lines for stack trace (0 =\u0026gt; NONE, -1 =\u0026gt; ALL)   weasis.export.dicom.send true no A Allows DICOM send. Is always false when weasis.export.dicom=false.   weasis.import.dicom true no A Allows importing DICOMs   weasis.import.dicom.qr true no A Allows DICOM Q/R. Is always false when weasis.import.dicom=false.   weasis.acquire.meta.global.display PatientID,PatientName, PatientBirthDate, PatientSex, AccessionNumber, StudyDescription no A Global tags at the patient or study level that are visible in Dicomizer   weasis.acquire.meta.global.edit StudyDescription no A Global tags which are editable   weasis.acquire.meta.global.required PatientID, PatientName, AccessionNumber, StudyDescription no A Global tags which are required for publication   weasis.acquire.meta.series.display Modality, OperatorsName, ReferringPhysicianName, BodyPartExamined, SeriesDescription no A Tags at the series level that are visible in Dicomizer   weasis.acquire.meta.series.edit ReferringPhysicianName, BodyPartExamined, SeriesDescription no A Series tags which are editable   weasis.acquire.meta.series.required Modality, SeriesDescription no A Series tags which are required for publication   weasis.acquire.meta.image.display ImageComments, ContentDate, ContentTime no A Tags at the image level that are visible in Dicomizer   weasis.acquire.meta.image.edit ImageComments, ContentDate, ContentTime no A Image tags which are editable   weasis.acquire.meta.image.required ContentDate no A Image tags which are required for publication   weasis.acquire.dest.host localhost no A Hostname of DICOM send destination for Dicomizer. If no value, the list of DICOM nodes for storage is displayed.   weasis.acquire.dest.aet DCM4CHEE no A AETitle of DICOM send destination for Dicomizer   weasis.acquire.dest.port 11112 no A Port of DICOM send destination for Dicomizer   weasis.acquire.meta.study.description Pictures of follow-up,Pictures of observation,Pictures preoperative,Pictures intraoperative,Pictures postoperative no A Comma-separated list of study description elements. Comment this property to have a free text field.   weasis.acquire.meta.series.description  no A Comma-separated list of series description elements. Comment this property to have a free text field.   ONLY from Weasis 2.6.0       weasis.level.inverse true yes F Inverse level direction (moving the cursor down to increase brightness)   weasis.apply.latest.pr false yes F Apply by default the most recent Presentation State to the related image   weasis.user system user no A Defines a user with its own preferences   ONLY from Weasis 3.5.3       weasis.pref.store.local.session false no A Store user preferences when weasis.user is not specified (only with remote preferences service)     Examples of properties in ext-config.properties Changing the default Look and feel\n# Define the Look an Feel for the first launch according to the platform (macosx, linux, windows) weasis.look=org.pushingpixels.substance.api.skin.SubstanceSaharaLookAndFeel weasis.look.macosx=com.apple.laf.AquaLookAndFeel weasis.look.linux=org.pushingpixels.substance.api.skin.SubstanceGraphiteAquaLookAndFeel Customize resources The default resources are located:\n For the web distribution in \u0026ldquo;resources.zip\u0026rdquo; at the root of weasis.war (see above how to set a new URL for resources) For the portable distribution in ./weasis/resources  How to add DICOM nodes or DICOM printers at the server-side  From the graphical user interface, configure the DICOM printers (File \u0026gt; Print \u0026gt; DICOM Print) or DICOM nodes (File \u0026gt; Preferences \u0026gt; Dicom node list) Go to he folder ${user.home}/.weasis/data/weasis-dicom-explorer Copy the desired configuration files: dicomNodes.xml, dicomPrinterNodes.xml, dicomWebNodes.xml and dicomCallingNodes.xml Paste at the root path of resources. For web distribution, unzip, place files and zip again. The new configurations should appear for all the users as non-editable configurations in Weasis.  "
},
{
	"uri": "https://nroduit.github.io/en/basics/shortcuts/",
	"title": "Shortcuts",
	"tags": [],
	"description": "Keyboard and Mouse Shortcuts of Weasis",
	"content": "Keyboard and Mouse Shortcuts  IHE recommendations in Basic Image Review profile.\nSelected view of the 2D DICOM Viewer    Shortcut Action     T Translate (pan) the image canvas    W Window / Level    S Series scroll    Z Zoom    R Rotation   H Crosshair: in multiview mode synchronizes the crosshair position to all the views (Note: Ctrl + click or Ctrl + Shift + click allows changing the Window / Level values)   C Cine Start / Stop   M Measure   D Distance measurement    A Angle measurement    Y Polyline measurement   B Textbox   Q Context menu   Ctrl + Spacebar Change to the next action   Ctrl + mouse drag Accelerate the current action    Ctrl + Shift + mouse drag Accelerate more the current action   Alt + R 90° rotation (clockwise)   Alt + L 90° rotation (counterclockwise)   Alt + F Flip horizontally (after rotation action)   0 1 2 3\u0026hellip; DICOM presets   K Toggle key image state   Spacebar Show/Hide all the annotations (three states)   I Show/Hide all the annotations (three states)    Escape Reset the selected view    P Print view(s) with the operating system printer    Right-click Open the contextual menu for more options   Double click Toggle fullscreen   Drag files/directories\n(from the OS file manager) Open DICOMs files    DICOM explorer    Shortcut Action     Ctrl + click on the thumbnail Select multiple series   Click on a thumbnail and then Shift + click on another one Select all series between   Enter Open the selected series in the default viewer   Click + drag a thumbnail in the main view Display a series   Right-click Open the contextual menu for more options    Downloading Priorities: Selecting a thumbnail gives the best priority to download.\n Graphics    Shortcut Action     Click on a graphic Select a Graphics   Click + mouse drag In selection mode: select all the graphics inside the selection area.\nIn drawing mode: draw the selected graphic shape.   Ctrl + A Select all the graphics   Ctrl + D Deselect all the graphics   Delete Delete the selected graphics   Shift + click on a graphic In selection mode: add or remove a graphic to the current selection.\nIn drawing mode: force to draw on another graphic (without shift the graphic is selected).   Double click Stop adding points for polyline (also available in the context menu)   Right-click Open the contextual menu for more options    Tips and Tricks Window / Level: \n Horizontal movement of the mouse to the right will widen the window width (flatten the perceived contrast) Vertical movement of the mouse upwards will lower the window center (increase the perceived brightness). See Preferences to inverse level direction.  Two ways to draw a segment:\n Click + drag \u0026gt; release Click \u0026gt; release \u0026gt; drag \u0026gt; release  "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "  DICOM Explorer  Structure and display of Patients/Studies/Series\n Zoom  How to manipulate zoom and lens\n DICOM Attributes  How to display and compare DICOM attributes\n Histogram  How to display histogram of real values and output LUT\n Print  How to print images\n Build KO and PR  How to build and export DICOM Key Object Selection and Presentation State (GSPS)\n Proxy server  How to configure a proxy server\n Spatial Calibration  How to change the spatial calibration of an image or a series\n Translation  How to change the language and regional settings\n Styles and themes  How to apply another style and theme\n "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/build-plugins/",
	"title": "Build Plug-ins",
	"tags": [],
	"description": "How to build new Weasis plug-ins and how they can be incorporated to the distributions",
	"content": "How to build and install a plug-in This page describes how to build new Weasis plug-ins and how they can be incorporated into the distributions, see also this page for the IDE configuration.\nList of plug-ins types  Media viewer or editor (main central panel that implements ViewerPlugin or ImageViewerPlugin and the factory implements SeriesViewerFactory) Toolbar associated with a viewer (implements Toolbar) Tool associated with a viewer (right panel that implements DockableTool) Data Explorer (data model implements DataExplorerModel and data view implements DataExplorerView, and the factory implements DataExplorerViewFactory) Import data into an explorer (ex. ImportDicom and the factory implements DicomImportFactory) Export data into an explorer (ex. ExportDicom and the factory implements DicomExportFactory) DICOM editor or viewer for special modalities (DicomSpecialElementFactory and SeriesViewerFactory), see weasis-dicom-sr Media codec (implements Codec) Preferences (implements PreferencesPageFactory) UI aggregator. This is the application main user interface bundle. The maven artifact of this bundle must be defined in config.properties (ex. weasis.main.ui=weasis-base-ui)  See the Weasis Architecture to understand the plug-in hierarchy.\n Build plug-ins from Maven archetype  From the folder Weasis/archetype execute: mvn install Generate a sample project by executing the following command: mvn archetype:generate -DarchetypeCatalog=local Select the archetype:  weasis-plugin-base-viewer-archetype (example of a toolbar and a tool for the non DICOM viewer) weasis-plugin-dicom-viewer-archetype (example of a toolbar and a tool for the DICOM viewer)    From Eclipse: File \u0026gt; New \u0026gt; Maven Project and Search for weasis archetype in catalog filter.\nFrom Intellij: File \u0026gt; New Project \u0026gt; Maven, check \u0026ldquo;Create from archetype\u0026rdquo; and select a Weasis archetype\n In the pom.xml of the new plug-in, the tag \u0026lt;relativePath\u0026gt; must be adapted to your relative path of Weasis sources.\nThe default value is \u0026lt;relativePath\u0026gt;../Weasis/weasis-parent/pom.xml\u0026lt;/relativePath\u0026gt;\n Install plug-ins For weasis-portable distribution The file \u0026ldquo;/weasis/conf/ext-config.properties\u0026rdquo; must be adapted and plug-ins must be placed in the directory \u0026ldquo;/weasis/plugins\u0026rdquo;.\nExample with weasis-isowriter:\n  Add in /weasis/conf/ext-config.properties: felix.auto.start.85=${weasis.codebase.url}/plugins/weasis-isowriter-2.6.1.jar If you want to use another directory for a plugin on your computer, you should use one of the following properties:\nOn Windows: felix.auto.start.85=file:///C:/path/to/weasis-isowriter-2.6.1.jar\nOn linux: felix.auto.start.85=file:///home/Username/path/to/weasis-isowriter-2.6.1.jar\nOn macOS: felix.auto.start.85=file:///Users/Username/path/to/weasis-isowriter-2.6.1.jar\n For not modifying the current ext-config.properties create a new file and add to the launcher the following VM argument: -Dfelix.extended.config.properties=\u0026quot;file:///your_plugin_path/myplugin-config.properties\u0026quot;\n   Place the file \u0026ldquo;weasis-isowriter-2.6.1.jar\u0026rdquo; in the directory \u0026ldquo;/weasis/plugins\u0026rdquo;\n  For the WEB distribution Build a new war file containing the plug-ins and the ext-config.properties file.\n  Build \u0026ldquo;weasis-ext.war\u0026rdquo; with the following structure: weasis-ext/ ├── conf/ │ ├── ext-config.properties ├── WEB-INF/ │ ├── web.xml ├── plugin1.jar └── plugin2.jar\n  In /weasis-ext/conf/ext-config.properties, add the plug-ins references: felix.auto.start.85= \\ ${weasis.codebase.ext.url}/plugin1.jar \\ ${weasis.codebase.ext.url}/plugin2.jar Using ${weasis.codebase.ext.url} allows to keep the base URL abstract, so moving the package to another server won’t be a problem. Otherwise absolute URLs must be used. The default value of ${weasis.codebase.ext.url} is ${weasis.codebase.url}-ext.\n   weasis-ext is the default web context when launching Weasis, using another web context requires modifying the property weasis.ext.url, it can be done by:\n  changing the property in jnlp template in weasis-pacs-connector configuration. weasis.ext.url=${server.base.url}/weasis-newext It is also possible to add the code base for plugins (cdb-ext) directly in the URL: http://localhost:8080/weasis-pacs-connector/viewer?patientID=9702672\u0026amp;cdb-ext=http://localhost:8080/plugins/weasis-ext\n   For debugging a specific configuration: add to the launcher the following VM argument: -Dfelix.extended.config.properties=\u0026quot;http://server:port/weasis-ext/conf/ext-config.properties\n An example that makes a package of weasis-isowriter plugin:\n Build \u0026ldquo;weasis-ext.war\u0026rdquo;: weasis-ext/ ├── conf/ │ ├── ext-config.properties ├── WEB-INF/ │ ├── web.xml └── weasis-isowriter-2.0.3.jar  Build OSGi services All the plug-in type described in the list above are OSGi services that are registered and aggregated in the GUI. Building the plug-in from the Maven archetype will configure the OSGi service automatically. For adding new OSGi services, here is the procedure:\n  Create a class implementing one of the plug-in types and add at least the annotations @Component and @Service, for instance: @Component(immediate = false) @Service public class SamplePrefFactory implements PreferencesPageFactory { ... } For more information about annotations see the Apache Felix SCR Annotations.\n   Add in pom.xml of the plug-in the maven-scr-plugin (to generate XML file from the Java annotations) and the property for loading any XML file in maven-bundle-plugin: \u0026lt;build\u0026gt; \u0026lt;plugins\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.felix\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-scr-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;/plugin\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.felix\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-bundle-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;/plugin\u0026gt; ...\n  "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/building-weasis/",
	"title": "Building Weasis",
	"tags": [],
	"description": "How to build Weasis from sources",
	"content": "These instructions describe how to build Weasis directly from the Git repository on any platform. For building Weasis from an IDE, see Weasis plug-in development guidelines.\nPrerequisites\n JDK 11 or higher Maven 3.5.3 or higher\nIf your computer is behind a proxy server, configure maven. Git or directly download source from github  Getting the Source To clone the repository, first install GIT and either clone using a graphical GIT client or directly from the command line using the command:\n$ git clone https://github.com/nroduit/Weasis.git The trunk is not a stable version and snapshot version is not retained in the cache for the web distribution (it means the files will be downloaded every time)\n Check out a tag version to build a stable version, see the tag list.\n$ git checkout \u0026lt;TAG_NAME\u0026gt; Building all Plug-ins  Go in the Weasis directory, compile and install all the plug-ins in the local Maven repository $ mvn clean install  Building Weasis Distributions The native installer will progressively replace the portable and the web distribution. It uses the weasis protocol (which not requires jar signing) instead of Java Web Start which has been removed from Java 11 release and because the end of public Oracle Java 8 updates from April 2019.\nThe documentation for building the native installer we be available from Weasis 4.\n  Requires installing all the plug-ins in the local Maven repository as described in the item above. $ cd weasis-distributions $ mvn clean package -Dportable=true -P compressXZ -P compressXZ: Option for compressing the packages in xz, only from Weasis 3.6.0. The compression pack200 is not supported anymore (removed from Java 14), before 3.6.0 the profile was -P pack200.\n-Dportable=true: Option for building the portable distribution (multi-platform standalone launchers)\n For the WEB distribution using Java Webstart, it is required to sign jar files with your own certificate (by replacing values in the command below with your own values). A trust-worthy certificate from a certificate authority is required to run Java Web Start applications. A self-signed certificate generate by keytool will always display a security warning message.\n The parameters must be placed in the maven user setting or has to be the options in the Maven command: $ mvn clean package -Djarsigner.alias=\u0026#34;your_alias\u0026#34; -Djarsigner.storepass=\u0026#34;your_pwd\u0026#34; -Djarsigner.keystore=\u0026#34;your_path/keystore\u0026#34; -Dportable=true -P compressXZ For production, version must not end with SNAPSHOT (otherwise packages will not be kept in cache). So to remove SNAPASHOT or to make your own release (for avoiding package mix-up in cache), modify the changelist property. From the Weasis root folder, execute:\n $ mvn clean install -Dchangelist=-mybuild $ mvn clean package -Dchangelist=-mybuild -Dportable=true -P compressXZ -f weasis-distributions    Options for building the portable distribution.\n By default, the executable on Windows runs only a single instance (from Weasis 2.0). To disable single instance in the portable version, set windowsName property empty. $ mvn clean package -Dportable=true -DwindowsName= On 64-bit system, it requires installing the 32-bit compatibility libraries to build the windows executable. On Linux, you need to install ia32-libs package. Do not place the sources in a path that contains directories with blanks or national characters, the compilation of the win32 executable can fail.\n     The distribution files are located in:\n target/web-dist/ target/portable-dist/    "
},
{
	"uri": "https://nroduit.github.io/en/basics/customize/",
	"title": "Customize",
	"tags": [],
	"description": "",
	"content": "  Integration   Preferences   Build Plug-ins   "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/guidelines/",
	"title": "Guidelines",
	"tags": [],
	"description": "Guidelines for Weasis plug-in development",
	"content": "Weasis Plug-in Development This page describes the necessary configurations to be able to debug Weasis using an IDE. For developers who want to create new plug-ins, you can visit How to build and install a plug-in.\nWe recommend the use of IntelliJ IDEA because the following instructions are based on it. Nevertheless, it is possible to use other IDEs by configuring weasis-launcher with similar instructions described in Add a launcher.\nPrerequisites  Install IntelliJ IDEA (Community or Ultimate Edition) In File \u0026gt; Settings\u0026hellip; \u0026gt; Plugins install google-java-format plugin from Marketplace and enable it from google-java-format Settings  Code style and convention Weasis uses google-java-format as coding conventions. The format can be applied by Maven through the Spotless plugin or the IDE. Formatting code with an IDE is not 100% compatible with Spotless, so it is better to use the latter before submitting new commits. This guarantees identical code formatting regardless of the system or code editor used.\n From Maven command: mvn spotless:apply From the Maven panel   Getting the source and building Weasis  Getting the Source  For external Git client, see Building Weasis. From IntelliJ IDEA: New \u0026gt; Project from Version Control\u0026hellip;  In the Get from Version Control dialog, select the menu Repository URL and enter the following URL: https://github.com/nroduit/Weasis.git (public repository)     Building Weasis plug-ins  In File \u0026gt; Project Structure\u0026hellip; select JDK 11 or higher as Project SDK and 8 as Project language level In the maven panel, select clean/install in Lifecyle of weasis-framework (root) to compile and to install all the plug-ins in the local Maven repository    See also building the final Weasis Distributions\n Add a launcher For running or debugging Weasis, you need to create a launcher:\n  Open Run \u0026gt; Edit Configurations\u0026hellip;\n  Create a new Application\n Select weasis-launcher as a module (field starting by -cp) Main Class: browse org.weasis.launcher.AppLauncher Click on Modify Options  Select Include dependencies with \u0026ldquo;Provided\u0026rdquo; scope Select Add before launch task and remove the task Build Select Add VM Options and enter -Xms64m -Xmx768m -Dgosh.port=17179 --illegal-access=warn   Working Directory: remove the current value and add %MODULE_WORKING_DIR% from the Insert Macros button As the default build task has been removed it is necessary to apply the Maven command install on modules with modified code before launching the Run or Debug mode.\nKeeping the build task and delegating the build to Maven does not seem configurable for a multi-module project, see this issue.\n     Examples of launching parameters by entering values in the Program arguments text box\n Loading DICOM files from a local path: $dicom:get -l \\\u0026#34;D:\\images test\\dicom\\\u0026#34; Some command interpreters need to escape the quotes or double quotes required for paths or URLs. This is the case with IntelliJ IDEA or Eclipse.\nFor more commands at startup see also Weasis commands.\n In Eclipse launcher parameters, \u0026lsquo;\u0026amp;\u0026rsquo; within URLs needs to be escaped with a backslash.\n     Examples of other VM options for overriding the default Preferences\n Removing the possibility of exporting DICOM: -Dweasis.export.dicom=false Defines a new user (for getting specific preferences): -Dweasis.user=user1 Examples with specific configuration files:  For launching Weasis Dicomizer: -Dfelix.extended.config.properties=file:target/conf/ext-dicomizer.properties Configuration from an URL: -Dfelix.extended.config.properties=https://mysite.com/weasis/conf/ext-config.properties felix.config.properties defines the location of config.properties (the OSGI configuration and the list of plug-ins to install/start)\nfelix.extended.config.properties defines the location of ext-config.properties (extends/overrides config.properties)\n       "
},
{
	"uri": "https://nroduit.github.io/en/stories/",
	"title": "Stories",
	"tags": [],
	"description": "",
	"content": "The latest software developed at the University Hospital of Geneva (HUG) for medical imaging is Weasis which is the clinical viewer in the home-made Electronic Medical Records. Since 2010 it is an open source project distributed either as a WEB application or as a multi-platform portable application (about 50’000 downloads in 2017 for the portable version).\nThe University Hospital of Geneva has a long history of medical imaging software. Starting in 1990 at HUG, Osiris was the first radiological imaging viewer freely distributed and then in 2003 OsiriX was the Mac successor to Osiris.\nList of Weasis Success Stories Tell us if Weasis has been successfully used in your research projects, clinical applications or healthcare networks.\nEdit this page with a pull request or send a message to @nroduit and we\u0026rsquo;ll share it on this page.\n   Weasis touch\nWeasis touch with JavaFX\n  PACS in Bhutan\nPACS for Bhutan: a cost effective open source architecture for emerging countries\n  Weasis plugin for quantitative analysis\nA Response Assessment Platform for Development and Validation of Imaging Biomarkers in Oncology\n  Weasis UI driven by Kinect\n Kinect in the operating room Gesture-Controlled Image Management for Operating Room    Weasis supporting the data workflow in multi-center trials\nDICOM for Clinical Research: PACS-Integrated Electronic Data Capture in Multi-Center Trials\n  Weasis UI driven by Leap Motion\nTouchless gesture recognition system for imaging controls in sterile environment\n  System for veterinary practices\nA Reliable, Low-Cost Picture Archiving and Communications System for Small and Medium Veterinary Practices Built Using Open-Source Technology\n  "
},
{
	"uri": "https://nroduit.github.io/en/basics/commands/",
	"title": "Weasis Commands",
	"tags": [],
	"description": "List of commands at start-up and for driving Weasis",
	"content": "The commands listed below can be applied at start-up or in a telnet session. All the commands starting with \u0026ldquo;dcmview2d:\u0026rdquo; allow to drive Weasis and are not adapted to be used at start-up.\nThis page matches to Weasis 2.5.1 or higher. The syntax of usage comes from POSIX.\n To obtain the list of commands, after starting Weasis, open a local telnet session of the OSGI Console and type lb for getting the list of bundles and their state or type help for getting all the available commands:\ntelnet localhost 17179 Trying 127.0.0.1... Connected to localhost.localdomain. Escape character is \u0026#39;^]\u0026#39;. ____________________________ Welcome to Apache Felix Gogo g!  Modifying the default port number: This value can be changed in the configuration of the launcher (by overriding the property or with a new jnlp template)\n List of Weasis commands dcmview2d:layout g! dcmview2d:layout Select a split-screen layout Usage: dcmview2d:layout ( -n NUMBER | -i ID ) -n --number=NUMBER select the best matching number of views -i --id=ID select the layout from its identifier -? --help show help dcmview2d:mouseLeftAction g! dcmview2d:mouseLeftAction Change the mouse left action Usage: dcmview2d:mouseLeftAction COMMAND COMMAND is (sequence|winLevel|zoom|pan|rotation|crosshair|measure|draw|contextMenu|none) -? --help show help dcmview2d:move g! dcmview2d:move Pan the selected image Usage: dcmview2d:move -- X Y X and Y are Integer. It is mandatory to have \u0026#39;--\u0026#39; (end of options) for negative values -? --help show help dcmview2d:reset g! dcmview2d:reset Reset image display Usage: dcmview2d:reset (-a | COMMAND...) COMMAND is (winLevel|zoom|pan|rotation) -a --all reset to original display -? --help show help dcmview2d:scroll g! dcmview2d:scroll Scroll into the images of the selected series Usage: dcmview2d:scroll ( -s NUMBER | -i NUMBER | -d NUMBER) -s --set=NUMBER set a new value from 1 to series size -i --increase=NUMBER increase of some amount -d --decrease=NUMBER decrease of some amount -? --help show help dcmview2d:synch g! dcmview2d:synch Set a synchronization mode Usage: dcmview2d:synch VALUE VALUE is (None|Stack|Tile) -? --help show help dcmview2d:wl g! dcmview2d:wl Change the window/level values of the selected image (increase or decrease into a normalized range of 4096) Usage: dcmview2d:wl -- WIN LEVEL WIN and LEVEL are Integer. It is mandatory to have \u0026#39;--\u0026#39; (end of options) for negative values -? --help show help dcmview2d:zoom g! dcmview2d:zoom Change the zoom value of the selected image Usage: dcmview2d:zoom (set VALUE | increase NUMBER | decrease NUMBER) -s --set=VALUE [decimal value] set a new value from 0.0 to 12.0 (zoom magnitude, 0.0 =\u0026gt; default, -200.0 =\u0026gt; best fit, -100.0 =\u0026gt; real size) -i --increase=NUMBER increase of some amount -d --decrease=NUMBER decrease of some amount -? --help show help dicom:get g! dicom:get Load DICOM files remotely or locally Usage: dicom:get ([-l PATH]... [-w URI]... [-r URI]... [-p] [-i DATA]... [-z URI]...) PATH is either a directory(recursive) or a file -l --local=PATH open DICOMs from local disk -r --remote=URI open DICOMs from an URI -w --wado=URI open DICOMs from an XML manifest -z --zip=URI open DICOM ZIP from an URI -p --portable open DICOMs from configured directories at the same level of the executable -i --iwado=DATA open DICOMs from an XML manifest (GZIP-Base64) -? --help show help dicom:close g! dicom:close Close DICOM files Usage: dicom:close (-a | ([-y UID]... [-s UID]...)) -a --all close all the patients -y --study=UID close a study, UID is Study Instance UID -s --series=UID close a series, UID is Series Instance UID -? --help show help dicom:rs g! dicom:rs Load DICOM files from DICOMWeb API (QIDO/WADO-RS) Usage: dicom:rs -u URL -r QUERYPARAMS... [-H HEADER]... [--query-header HEADER]... [--retrieve-header HEADER]... [--query-ext EXT] [--retrieve-ext EXT] [--accept-ext EXT] -u --url=URL URL of the DICOMWeb service -r --request=QUERYPARAMS Query params of the URL, see weasis-pacs-connector -H --header=HEADER Pass custom header(s) to all the requests --query-header=HEADER Pass custom header(s) to the query requests (QIDO) --retrieve-header=HEADER Pass custom header(s) to the retrieve requests (WADO) --query-ext=EXT Additionnal parameters for Query URL (QIDO) --retrieve-ext=EXT Additionnal parameters for Retrieve URL (WADO) --accept-ext=EXT Additionnal parameters for DICOM multipart/related Accept header of the retrieve URL (WADO). Default value is: transfer-syntax=* --show-whole-study when downloading a series, show all the other series (ready for download) from the same study -? --help show help image:get g! image:get Load images remotely or locally Usage: image:get ([-f file]... [-u url]...) -f --file=FILE open an image from a file -u --url=URL open an image from an URL -? --help show help image close g! image:close Close images Usage: dicom:close (-a | ([-g UID]... [-s UID]...)) -a --all close all series -g --group=UID close a group from its UID -s --series=UID close an series/image from its UID -? --help show help weasis:info g! weasis:info Show information about Weasis Usage: weasis:info (-v | -a) -v --version show version -a --all show weasis specifications -? --help show help weasis:ui g! weasis:ui Manage user interface Usage: weasis:ui (-q | -v) -q --quit shutdown Weasis -v --visible set window on top -? --help show help acquire:patient g! acquire:patient Load Patient Context from the first argument Usage: acquire:patient (-x | -i | -s | -u) arg arg is an XML text in UTF8 or an url with the option \u0026#39;--url\u0026#39; -x --xml open Patient Context from an XML data containing all DICOM Tags -i --inbound open Patient Context from an XML data containing all DICOM Tags, decoding syntax is [Base64/GZip] -s --iurlsafe open Patient Context from an XML data containing all DICOM Tags, decoding syntax is [Base64_URL_SAFE/GZip] -u --url open Patient Context from an URL (XML file containing all DICOM TAGs) -? --help show help weasis:config (only at launch) This command can be used only at launch, see Modify the launch parameters\nFor identifying the commands at start-up, the symbol \u0026ldquo;$\u0026rdquo; must be added before the command (not required in the OSGI console). See examples below.\n Special characters: A command containing special characters like \u0026lsquo;\u0026amp;\u0026rsquo; or space must be within quotes or double quotes. Example: dicom:get -w \u0026ldquo;https://dicom.com/test\u0026amp;sopuid=322344\u0026quot; Depending the command line system, quotes or double quote needs to be escaped with a backslash. Ex. simple quote must be escaped in Eclipse but not in Intellij.\n Weasis Portable distribution The native installer will progressively replace the portable and the web distribution with the weasis protocol.\n There are two ways to open local images with the portable distribution.\n  Load images automatically from a configured directory\nSet images into a “dicom” or “images” directory at the same level of the binary launcher (c.f. weasis-win32.exe). The default directories can be changed in weasis/conf/config.properties, see the properties starting by \u0026ldquo;weasis.portable.\u0026rdquo; in Weasis Weasis Preferences. Launch Weasis by double clicking on the executable file or in command-line (c.f. on Linux: ./weasis-linux.sh \u0026lsquo;$dicom:get \u0026ndash;portable\u0026rsquo;)\n   Launch arguments\n Linux and Mac: commands must be in between quotes ./viewer-linux.sh \u0026#39;$dicom:get -l /home/Images/\u0026#39; # Multiple commands: ./viewer-linux.sh \u0026#39;$dicom:get -l \u0026#34;/DICOM/Overlay\u0026#34;\u0026#39; \u0026#39;$weasis:ui --visible\u0026#39; # Local directories (recursive) or files: ./viewer-linux.sh \u0026#39;$dicom:get -l \u0026#34;/DICOM/Overlay\u0026#34; -l \u0026#34;/DICOM/test/file.dcm\u0026#34;\u0026#39; # Open non DICOM images (Local and URL): ./viewer-linux.sh \u0026#39;$image:get -f \u0026#34;/home/Images/test.png\u0026#34; -u https://dcm4che.atlassian.net/wiki/download/attachments/3670024/weasis-mpr.png\u0026#39; Windows commands viewer-win32.exe $dicom:get -l \u0026#34;E:\\DICOM\\Overlay\u0026#34; -l \u0026#34;E:\\DICOM\\Shutter\u0026#34; viewer-win32.exe $dicom:get -l \u0026#34;E:/DICOM/Overlay\u0026#34; -l \u0026#34;E:/DICOM/Shutter\u0026#34;    "
},
{
	"uri": "https://nroduit.github.io/en/basics/dicom/",
	"title": "Dicom Conformance",
	"tags": [],
	"description": "DICOM Conformance Statements of Weasis",
	"content": "Compatibility of DICOM Transfer Syntax    Transfer Syntax UID Description Supported     1.2.840.10008.1.2 Implicit VR - Little Endian yes   1.2.840.10008.1.2.1 Explicit VR - Little Endian yes   1.2.840.10008.1.2.2 Explicit VR Big Endian (Retired) yes   1.2.840.10008.1.2.5 RLE (Run Length Encoding) Lossless yes   1.2.840.10008.1.2.4.50 JPEG Baseline (Process 1): Default Transfer Syntax for Lossy JPEG 8 Bit Image Compression yes   1.2.840.10008.1.2.4.51 JPEG Extended (Process 2 \u0026amp; 4): Default Transfer Syntax for Lossy JPEG 12 Bit Image Compression (Process 4 only) yes   1.2.840.10008.1.2.4.53 JPEG Spectral Selection, Non-Hierarchical (Process 6 \u0026amp; 8) (Retired) yes   1.2.840.10008.1.2.4.55 JPEG Full Progression, Non-Hierarchical (Process 10 \u0026amp; 12) (Retired) yes   1.2.840.10008.1.2.4.57 JPEG Lossless, Non-Hierarchical (Process 14) yes   1.2.840.10008.1.2.4.70 JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1]): Default Transfer Syntax for Lossless JPEG Image Compression yes   1.2.840.10008.1.2.4.80 JPEG-LS Lossless Image Compression yes   1.2.840.10008.1.2.4.81 JPEG-LS Lossy (Near-Lossless) Image Compression yes   1.2.840.10008.1.2.4.90 JPEG 2000 Image Compression (Lossless Only) yes   1.2.840.10008.1.2.4.91 JPEG 2000 Image Compression yes   1.2.840.10008.1.2.4.92 JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only) yes   1.2.840.10008.1.2.4.93 JPEG 2000 Part 2 Multi-component Image Compression yes    These TSUIDs are available with Weasis 2.5 and later for Windows, Mac OS X and Linux.\n    Transfer Syntax UID Description Supported     1.2.840.10008.1.2.6.1 RFC 2557 MIME Encapsulation yes   1.2.840.10008.1.2.4.100 MPEG-2 Main Profile Main Level yes   1.2.840.10008.1.2.4.101 MPEG-2 Main Profile High Level yes   1.2.840.10008.1.2.4.102 MPEG-4 AVC/H.264 High Profile / Level 4.1 yes   1.2.840.10008.1.2.4.103 MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1 yes   1.2.840.10008.1.2.4.104 MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video yes   1.2.840.10008.1.2.4.105 MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video yes   1.2.840.10008.1.2.4.106 MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2 yes    These TSUIDs are open by the default system application associated to the MIME type.\n Supported \u0026ldquo;Photometric Interpretation\u0026rdquo; pixel format    Photometric Interpretation Description Supported     MONOCHROME1 grey level image description (high values=dark, low values=bright) yes   MONOCHROME2 grey level image description (high values=bright, low values=dark) yes   PALETTE COLOR pseudo color image description yes   RGB true color image description yes   YBR_FULL true color image description yes   YBR_FULL_422 true color image description yes   YBR_PARTIAL_422 true color image description (Retired) yes   YBR_PARTIAL_420 true color image description yes   YBR_ICT true color image description (JPEG-2000) yes   YBR_RCT true color image description (JPEG-2000) yes    "
},
{
	"uri": "https://nroduit.github.io/en/old/rebuild-dcm4chee-web/",
	"title": "Rebuild dcm4chee-web",
	"tags": [],
	"description": "",
	"content": "Build dcm4chee-web 2.15.0, 2.16.2 or 2.17.0 Prerequisites  Subversion (SVN), one of the following client:  Subversion - The core system (server, client, libs) Subversive - SVN Team Client (Eclipse plugin) TortoiseSVN - Handy SVN client for Windows systems   JDK 6 or higher Ant 1.6 or higher  Getting the Source To check out the code, first install Subversion and either checkout the trunk branch using a graphical Subversion client (such as TortoiseSVN) or directly from the command line using the command:\n$ svn co https://svn.code.sf.net/p/dcm4che/svn/weasis/weasis_dcm4chee/trunk/2.17.0 weasis-dcm4chee-2.17.0 This command will copy the current development code (the \u0026ldquo;trunk\u0026rdquo;) into a local directory named weasis-dcm4chee-2.17.0.\nBuilding dcm4chee-web.war   Go in the weasis-dcm4chee directory\n  Compile and make the dcm4chee-web.war (in weasis-dcm4chee/dist folder) $ ant dist\n  Modify the permission in /dcm4jboss-web/src/etc/conf/dcm4chee-web/folder.permissions or in server/default/conf/dcm4chee-web if dcm4chee is already installed:\n folder.*=edit,move,delete,view,*export,edit.newStudyUID,mergepat,study_permission,study_permission.free_role_action,query_has_issuer folder.*export=export_tf,export_xds\n\u0026hellip;\nfolder=WebUser(send,view);DatacareUser(edit,move,delete,export_xds,view);WebAdmin(*)\n   Place the dcm4chee-web.war and the weasis.war to the deploy folder of dcm4chee\n   Rebuild dcm4chee-web from any version (Draft)  Make a project to rebuild dcm4chee-web   Download a dcm4chee package (any db package, ex. dcm4chee-2.14.7-mysql.zip) Create new Java project (see example of dcm4chee-web 2.17.0, Eclipse project) Extract dcm4chee-web.war Link required binaries (commons-codec.jar,dcm4che.jar,dcm4chee-ejb-client.jar,jboss-j2ee.jar,servlet-api.jar,slf4j-api-1.6.1.jar) to the project from default/lib/ or from jboss 4.2.3 (if not installed in dcm4chee) Link required binaries (maverick.jar and dcm4chee-web.jar) from ddcm4chee-web/WEB-INF/lib/ Add viewer.gif in dcm4chee-web/images Add launcher.properties in dcm4chee-web/viewer Add java sources in src folder Move the content of the WEB-INF/classes in etc/message Copy build.xml and modify it if necessary   Replace in maverick.xml:\n\u0026lt;controller class=\u0026quot;org.dcm4chex.archive.web.maverick.FolderSubmitCtrl\u0026quot; /\u0026gt; by \u0026lt;controller class=\u0026quot;org.dcm4chex.archive.web.maverick.FolderSubmitCtrl2\u0026quot; /\u0026gt;\n  Add text for Weasis button\n in dcm4chee-web/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;View selected Entities in Weasis\u0026quot;\u0026gt; in dcm4chee-web/de/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;Ausgewählte Entitäten in Weasis sehen\u0026quot;\u0026gt; in dcm4chee-web/fr/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;Visualiser la sélection dans Weasis\u0026quot;\u0026gt; in dcm4chee-web/jp/translate.dtd \u0026lt;!ENTITY ViewSelectedEntities \u0026quot;View selected Entities in Weasis\u0026quot;\u0026gt;    Modify dcm4chee-web/folder-tpl.xsl\n Add after \u0026lt;xsl:param name=\u0026ldquo;folder.delete\u0026rdquo; select=\u0026quot;\u0026lsquo;false\u0026rsquo;\u0026quot; /\u0026gt; \u0026lt;xsl:param name=\u0026#34;folder.view\u0026#34; select=\u0026#34;\u0026#39;false\u0026#39;\u0026#34; /\u0026gt; Add after \u0026lt;xsl:if test=\u0026quot;$folder.delete='true'\u0026quot;\u0026gt; … \u0026lt;/xsl:if\u0026gt; \u0026lt;xsl:if test=\u0026#34;$folder.view=\u0026#39;true\u0026#39;\u0026#34;\u0026gt; \u0026lt;td width=\u0026#34;40\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;image\u0026#34; value=\u0026#34;View\u0026#34; name=\u0026#34;view\u0026#34; src=\u0026#34;images/view.gif\u0026#34; alt=\u0026#34;view\u0026#34; border=\u0026#34;0\u0026#34; title=\u0026#34;\u0026amp;ViewSelectedEntities;\u0026#34; onclick=\u0026#34;return confirm(\u0026#39;\u0026amp;ViewSelectedEntities;?\u0026#39;)\u0026#34;\u0026gt; \u0026lt;xsl:if test=\u0026#34;total \u0026lt;= 0\u0026#34;\u0026gt; \u0026lt;xsl:attribute name=\u0026#34;disabled\u0026#34;\u0026gt;disabled \u0026lt;/xsl:attribute\u0026gt; \u0026lt;/xsl:if\u0026gt; \u0026lt;/input\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/xsl:if\u0026gt;    Rebuild WAR with \u0026ldquo;ant dist\u0026rdquo; and get dcm4chee-web.war in dist folder\n  Modify the permission in /dcm4jboss-web/src/etc/conf/dcm4chee-web/folder.permissions or in server/default/conf/dcm4chee-web if dcm4chee is already installed:\n folder.*=edit,move,delete,view,*export,edit.newStudyUID,mergepat,study_permission,study_permission.free_role_action,query_has_issuer folder.*export=export_tf,export_xds\n\u0026hellip;\nfolder=WebUser(send,view);DatacareUser(edit,move,delete,export_xds,view);WebAdmin(*)\n   Place the dcm4chee-web.war and the weasis.war to the deploy folder of dcm4chee\n  "
},
{
	"uri": "https://nroduit.github.io/en/getting-started/translating/",
	"title": "Internationalization",
	"tags": [],
	"description": "How to contribute to the Weasis translation",
	"content": "The translation files are now hosted and managed on Transifex website. Get an account at Transifex and help to translate to your language! If your language is missing, just head over to Transifex and request a new language.\nText length: The translations for many languages frequently exceed the length of the corresponding English source. It could be a problem for the layout of graphical components (e.g. buttons).\n Special characters: Some characters representing values (%d, %s), newline (\\n) and HTML tags must not be translated. For other translating recommendations, see Transifex help\nFor special words or particular contexts look at the \u0026ldquo;Instructions\u0026rdquo; text box (gives explanations or definitions).\n Building Weasis-i18n weasis-i18n is the internationalization project (i18n) of Weasis. As a separate project, it can have its own release cycle. The OSGi fragments of plug-ins contain only the translation files which are merged during runtime to the matching module of the application.\nTo obtain daily built packages, see this page.\nThat means the weasis-i18n.war file can be deployed at any time, it does not need to follow the Weasis life cycle. The plug-in translation will be updated by Weasis only if the timestamp number has changed. This timestamp is set during the build phase described below.\n Additional projects to obtain a full translation of Weasis:\nThe java-swing-dialogs translations must be updated manually in the weasis-launcher module and docking-frames translations must be packaged witin the library.\n Prerequisites  JDK 8 or higher Maven 3 or higher\nIf your computer is behind a proxy server, configure maven. Git or directly download the source code from GitHub  Getting the Source To clone the repository, first install GIT and either clone using a graphical GIT client (such as Tortoise Git) or directly from the command line using the command:\n$ git clone https://github.com/nroduit/weasis-i18n.git Build the distribution Go in the weasis-i18n directory, Compile and install all the plug-ins in the local Maven repository\n$ mvn clean install -Dtransifex.credential=\u0026#34;username:password\u0026#34; All of the API calls on Transifex require the user to be authenticated. So the value \u0026ldquo;username:password\u0026rdquo; must be replaced by your credential, see how to create an account on Transifex.\nCommand if you are behind a proxy server: $ mvn clean install -DproxySet=true -DproxyHost=\u0026#34;host\u0026#34; -DproxyPort=\u0026#34;port\u0026#34; -Dtransifex.credential=\u0026#34;username:password\u0026#34;\nThe distribution files are located in the weasis-i18n-dist/target/dist folder. weasis-i18n.war must be placed in the same base context as weasis.war (if in other web context, the launch property weasis.i18n must be adapted).\nTo update translation packs in weasis-portable, unzip weasis-i18n.zip and replace files in weasis-portable/weasis/bundle-i18n/.\n weasis-launcher-i18n cannot be updated dynamically as the launcher is not an OSGi module. It must be imported in the Weasis source (weasis-launcher).\n "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/zoom/",
	"title": "Zoom",
	"tags": [],
	"description": "How to manipulate zoom and lens",
	"content": "Zoom tool The zoom tool can be associated with one of three mouse buttons or with the mouse scroll (top left toolbar). In the image below the zoom tool is associated with the left mouse button.\nThe zoom factor can be modified from different locations:\n by dragging the cursor over the image with the configured mouse button by scrolling the mouse wheel when configured by selecting an item in the zoom dropdown button in the toolbar from the context menu: right-click on the image \u0026gt; Zoom form the slider in the image tool panel  The zoom function always zooms in/out to the center of the screen regardless of where the cursor is.\n For selecting directly the zoom action of the mouse left button, enter \u0026ldquo;z\u0026rdquo; as a shortcut.\n Real-world zoom The real-world zoom allows displaying the content of the image at the same size of the real objects.\nThe feature requires calibrating the screen where the image is displayed. From the main menu, open File \u0026gt; Preferences (Alt + P) \u0026gt; Monitors and click on \u0026ldquo;Spatial calibration\u0026rdquo;. Then enter a value that matches to the line length or the diagonal length of the screen.\nSeveral screens can be calibrated. Each one has its own spatial calibration factor.\n Magnifying lens The magnifying lens can be activated from the toggle button of the zoom toolbar (see the image below). It has several parameters accessible from the context menu.\nThis lens can be used in many situations, for instance:\n to magnify a specific area to compare two images from the same series (select Freeze image) to display a specific area without the drawings (Unselect Show Drawings) to compare different values of Window/Level (select Freeze parameters - see image below)  Using the mouse wheel on the lens changes the zoom factor. Double-clicking on the lens adjusts the zoom factor of the lens to the one of the main image.\n Parameters of the context menu:\n Synchronize to parent zoom: When this option is activated, the zoom factor of the lens is permanently adjusted to the zoom factor of the main image (meaningful when using freeze parameters). Show Drawings: Displays in the lens the visible drawings. Magnify: Allows to select a zoom magnitude. Image: Freeze parameters allows to keep the current image processing (c.f. Window/level, LUT or filter) and Freeze image allows to keep the current image and its parameters.  "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/tags/",
	"title": "DICOM Attributes",
	"tags": [],
	"description": "How to display and compare DICOM attributes",
	"content": "How to display DICOM attributes The DICOM attributes can be displayed either by:\n selecting the \u0026ldquo;Dicom Information\u0026rdquo; layout from the layout dropdown button (A) clicking on the \u0026ldquo;Dicom Information\u0026rdquo; button in the toolbar to open a detached window (B)  Using the view in the layout (A) allows updating dynamically the DICOM attributes to the current image (e.g. scrolling into the series). The DICOM attributes won\u0026rsquo;t change when opening the detached window (B).\n When Weasis opens particular DICOM files (e.g. PDF and video) with an external viewer, the DICOM attributes can viewed from the thumbnail context menu (see image below). How to find a specific DICOM attribute or value The Dicom Information window contains two tabs:\n Limited DICOM attributes: List of the main attributes assembled in several groups. All DICOM attributes: List of all the attributes where each data element is displayed with the following pattern: (Tag) [VR] TagName: value  When the data element contains several values, each value is separated by \u0026lsquo;'.\nData element with a value representation (VR) OB, OD, OL, OF, OW and UN shows \u0026ldquo;binary data\u0026rdquo; as value.\n In the image above, we are looking for the word \u0026ldquo;image\u0026rdquo;. Here are the steps:\n Select All DICOM attributes tab for having all the attributes. Enter the word you are looking for. Use the arrows to navigate into the highlighted results. The navigation shows the current result in orange. Note: this data element has several values. The second result here is a sequence element. Note: the left arrow shows the depth level as a sequence can contain another sequence.  The DICOM attributes can be copied into the clipboard with the copy shortcut of your system.\n "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/histo/",
	"title": "Histogram",
	"tags": [],
	"description": "How to display histogram of real values and output LUT",
	"content": "Displaying Histogram Displaying the histogram allows you to view the distribution of the modality values.\nDisplaying the histogram allow to better understand the effect on the pixel distribution wen changing all the LUT parameters from the Image Tool right panel.\n To open the histogram, select the \u0026ldquo;Histogram\u0026rdquo; layout from the Layouts dropdown button (see the image below).\nGeneral histogram parameters:\n Channel: With gray images only the Luminance channel is available. With color images, you can choose one of the following color models: RGB, HSV and HLS. Bins: The bins are the intervals values of pixels. By default, this number is calculated by the max value minus the min value and cannot exceed 512. The value entered must be between 64 and 4096. Statistics: Show the statistics of the histogram which allow to analyze and to compare images or image regions in a quantitative way (Pixels, Min, Max, Median, Mean, StDev, Skewness, Kurtosis, Entropy).  The values on the x-axis represent the modality values (e.g. Hounsfield for CT) or the pixel values for some modalities such as XA or MR. If the unit of the pixel value of the modality exists, it is visible at the end of the histogram title.\n To display the LUT on the image, select it from the Display panel on the right.\n Display histogram parameters:\n -/+: shrink/strech the y-axis scale (the number of occurences) Accumulate: Display a cumulative histogram Logarithmic: Show the number of occurences in a logarithmic scale (y-axis). Show intensity color: Show the bin with the LUT colors, otherwise in black. Reset: Set the default parameters  It is possible to display the histogram of a region with the measurement tools. Simply select the region to display its histogram (see the image below).\n Clicking on the histogram bin allows displying the number of occurences and the modality range values of the selected bin.\n "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/print/",
	"title": "Print",
	"tags": [],
	"description": "How to print images",
	"content": "Build the image selection to print The image selection to print must be prepared before calling the print function. If you need to print more than one image per page, choose a layout from the dropdown button in the toolbar (1).\nThe layout list is built dynamically according to the window size. So changing the window size ratio will provide other layouts. For instance, with a panoramic screen, you can choose a horizontal layout and then print with a landscape orientation.\n To fill the layout with images you can change the synchronized mode of series (2):\n with Default Tile selected, all the views will be filled with the same series. Each view has a new image of the series stack (n + 1). with Default Stack selected, drag and drop a series into each view and select independently which image you want to display.  Select a print mode Standard Printer From the main menu, open File \u0026gt; Print \u0026gt; Print 2D viewer layout (P).\nThe meaning of the standard print parameters:\n Image position: the position of the image in the print area. Image DPI: the print resolution in dot per inch (Default value is 150). Higher DPI means higher resolution. Print image with annotations: Allows to print the annotations defined in the Display panel. Print only the selected view: When this option is checked, only the selected view is printed (view with an orange border). Otherwise, all the views of the layout are printed.  DICOM Print From the main menu, open File \u0026gt; Print \u0026gt; DICOM Print.\nIn the DICOM Print dialog, you can manage several configurations. For the options meaning, you can refer to the above parameters and the DICOM print pages.\nThe DICOM printer configurations can be distributed at the server side for all the clients, see preferences.\n "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/build-ko-pr/",
	"title": "Build KO and PR",
	"tags": [],
	"description": "How to build and export DICOM Key Object Selection and Presentation State (GSPS)",
	"content": "How to build and export DICOM KO and PR Key Object Selection (KO)   To display KO Toolbar, select in menu: View \u0026gt; Toolbars \u0026gt; Key Object Selection Toolbar\n  Click on the right icon over the image to select the Key Object Selection. Click on the star icon (or press \u0026lsquo;k\u0026rsquo;) to create in a new KO or to add the key image.\n  Presentation State (PR or GSPS)   Open PR: Since Weasis 2.6.0 PRs are not applied to the image by default (requires to select the right icon over the image). To apply the most recent PR by default, change it in the preferences.\n  Create PR: Any type of annotations can be exported in DICOM Presentation State. Image presentation (zoom, W/L, LUT\u0026hellip;) will be exported in a future version.\n  Exporting Key Object Selection or Presentation State  To export KO or PR, select in the menu: File \u0026gt; Export \u0026gt; DICOM  Locally  Remotely     "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/proxy/",
	"title": "Proxy server",
	"tags": [],
	"description": "How to configure a proxy server",
	"content": "How to configure a proxy server Manual configuration from the user interface From the main menu, open File \u0026gt; Preferences (Alt + P) and select Proxy Server.\nThe default configuration is Direct connection (no proxy) and by clicking on Manual proxy configuration you can define a custom proxy server (in the image below, a local proxy like Squid).\nTo fill in the fields you must refer to the Java documentation.\nConfiguration at launch For setting JVM properties at launch, the selection in user interface must be Direct connection (no proxy) or configuration at launch. The Java options can be set in the section \u0026ldquo;[JavaOptions]\u0026rdquo; of Weasis.cfg.\nSet the default system proxy -Djava.net.useSystemProxies=true\nSet a local proxy like Squid -Dhttps.proxyHost=127.0.0.1 -Dhttps.proxyPort=3128\nSet a proxy in specific domain -Dhttps.proxyHost=\u0026ldquo;proxy.mydomain.com\u0026rdquo; -Dhttps.proxyPort=\u0026ldquo;8080\u0026rdquo; -Dhttp.proxyHost=\u0026ldquo;proxy.mydomain.com\u0026rdquo; -Dhttp.proxyPort=\u0026ldquo;8080\u0026rdquo; -Dhttp.nonProxyHosts=\u0026quot;*.mydomain.com|localhost\u0026quot; -Dhttp.proxyUser=\u0026ldquo;user\u0026rdquo; -Dhttp.proxyPassword=\u0026ldquo;password\u0026rdquo;\nThe Java options can also be passed in the parameters of the URL (e.g. http://localhost:8080/weasis-pacs-connector/weasis?patientID=9702672\u0026amp;pro=\u0026ldquo;https.proxyHost%20127.0.0.1\u0026rdquo;\u0026amp;pro=\u0026ldquo;https.proxyPort%203128\u0026rdquo;).\n "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/calibration/",
	"title": "Spatial Calibration",
	"tags": [],
	"description": "How to change the spatial calibration of an image or a series",
	"content": "How to change the spatial calibration   "
},
{
	"uri": "https://nroduit.github.io/en/old/",
	"title": "Old Documentation",
	"tags": [],
	"description": "",
	"content": "List of old pages related to Java Webstart  Embedding in dcm4chee (deprecated)     Integration (deprecated)     Rebuild dcm4chee-web     "
},
{
	"uri": "https://nroduit.github.io/en/tutorials/locale/",
	"title": "Translation",
	"tags": [],
	"description": "How to change the language and regional settings",
	"content": "How to change the language and regional settings Switching from the user interface From the main menu, open File \u0026gt; Preferences (Alt + P) and select the desired language and the regional format. The languages available in the list can be partially translated, check Internationalization.\nAnywhere in the user interface, date and number should be displayed with the selected regional format.\n Changing the default locale settings If you need to change the default settings, please see the preferences.\n"
},
{
	"uri": "https://nroduit.github.io/en/tutorials/theme/",
	"title": "Styles and themes",
	"tags": [],
	"description": "How to apply another style and theme",
	"content": "How to apply another theme Changing from the user interface From the main menu, open File \u0026gt; Preferences (Alt + P) and select the desired look and feel (click on \u0026ldquo;show\u0026rdquo; to see a partial preview)\nChanging the default look and feel value See preferences\n"
},
{
	"uri": "https://nroduit.github.io/en/stories/touch/",
	"title": "Weasis Multi-Touch",
	"tags": [],
	"description": "Redesigned user interface with JavaFX and multi-touch support",
	"content": "Master Thesis of Gérôme Pasquier   Try it from the demo server\n"
},
{
	"uri": "https://nroduit.github.io/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://nroduit.github.io/en/faq/",
	"title": "FAQs",
	"tags": [],
	"description": "Weasis Frequently Asked Questions",
	"content": "Frequently Asked Questions  Why is the Weasis license Eclipse Public License? Can Weasis be incorporated in DICOM CDs or other removable media? How to enable Weasis logging? Is it possible to download DICOM files without having a WADO server?  Why is the Weasis license Eclipse Public License? The Eclipse Public License is an OSI approved license and a commercially friendly copyleft license.\nEPL is more business-friendly about some patent retaliation and reverse engineering clauses than LGPL. With EPL, derivative work (weasis plugin) can be distributed in any license type: open source, freeware, commercial\u0026hellip; However, if you distribute Weasis with some modifications (changing existing source code of the open source Weasis plug-ins), even if it is a free distribution, you are obligated to make your modifications available to others.\nFor more information about EPL, check out the EPL 2 FAQ.\nNote that since version 3.7.0 the source code is released in dual license mode (EPL-2.0 OR Apache-2.0). This allows the user to choose one of these two licenses.\nCan Weasis be incorporated in DICOM CDs or other removable media? Yes, the Weasis portable version can be copied in DICOM CD-ROMs as a multi-platform stand-alone viewer with launchers for Mac OS X, Linux and Windows. The viewer requires that a Java Runtime Environment (JRE 8 or greater) be installed on the machine to run. If Java is not installed on Windows, a dialog will propose to install it from the Internet.\nThe executable (viewer-win32.exe) allows to embed a JRE in the relative directory \u0026ldquo;jre/windows\u0026rdquo; (e.g. weasis-portable/jre/windows/bin/java.exe). To support 32 and 64-bit architecture, copy 32-bit Java Runtime from its installed directory.\nNote: the embedded Java Runtime is used only when no runtime is available on the system. When Java is run from CD, it could be a little slow.\n The viewer loads automatically images from DICOMDIR or from directories configured in \u0026ldquo;weasis/conf/config.properties (by default weasis.portable.dicom.directory=dicom,DICOM,IMAGES,images).\nFor burning studies with Weasis, and additionnal plugin must be activated. In the web distribution, add weasis-ext.war. In the portable distribution, 1) uncompress weasis-ext.war, 2) copy weasis-isowriter-x.x.x.jar into weasis-portable/weasis/, 3) replace the file conf/ext-config.properties, 4) edit ext-config.properties and modify ${weasis.codebase.ext.url} by ${weasis.codebase.url}\nFor burning Weasis with dcm4chee-cdw, look at Write weasis-portable to DICOM CDs with dcm4chee-cdw.\nHow to enable Weasis logging?  From Weasis 3.5, a boot log file is always written in ${user.home}/.weasis/log/boot-x.log to trace the launching configuration. A default.log file in the same folder can trace all the Weasis activities; this one must be activated:  From File \u0026gt; Preferences \u0026gt; General enable Rolling log, select a log level and a stacktrace limit (DEBUG and empty (unlimited stacktrace lines) are recommended for investigating problems). The default logging configuration comes from config.properties or ext-config.properties, see Weasis Preferences.    To determine the path of ${user.home}/.weasis go to the Help \u0026gt; About Weasis menu and find the property weasis.path in the System Information tab\n  By displaying the Java console (only when launching with Java Webstart, not compatible with weasis protocol):  Windows Linux Mac:  Navigate to the following folder: Applications \u0026gt; Utilities \u0026gt; Java. Click the Java Preferences icon and then the Advanced tab. Under the Java console section, select the Show console radio button.      Is it possible to download DICOM files without having a WADO server? Yes, but a WADO server is recommended. Downloading DICOMs can be achieved by:\n Building an XML file by using DirectDownloadFile and DirectDownloadThumbnail: Adding the following command:\n$dicom:get -r http://external.server/images/MRIX_LUMBAR/img1.dcm http://external.server/images/img2.dcm\nNote: This option must be used only for a very limited number of files.   "
},
{
	"uri": "https://nroduit.github.io/en/get-involved/",
	"title": "Get Involved!",
	"tags": [],
	"description": "How to participate in the Weasis project",
	"content": "Report Bugs and Enhancements First, look at the GitHub issues system, the forum and/or this website (like FAQs or Getting Started) to see if your problem has not been reported yet.\nOnly then, fill a bug on GitHub with the most details from a template.\nBecome a Committer  Become a committer on an existing project or on one of the incubating projects, for Weasis use pull requests.  Share Your Knowledge  Do you or your company have a success story about Weasis? Send a story to @nroduit and we\u0026rsquo;ll share it on this website. Help building the documentation. Each page or the entire website can be forked and modify with pull requests. Localization: Help translating Weasis into other languages. Help on the forum other users.  "
},
{
	"uri": "https://nroduit.github.io/en/demo/",
	"title": "Launch Weasis",
	"tags": [],
	"description": "Various DICOM samples for testing the viewer capabilities",
	"content": "Demo with multiple DICOM Samples This page shows a list of DICOM samples for testing viewer capabilities.\nNaming convention\n Patient name starting with \u0026ldquo;TEST^\u0026rdquo; and then the general test purpose. \u0026ldquo;TEST-i18n-\u0026rdquo; prefix is for internationalization test. In study description: general test description In series description: test description   How to launch Weasis To display the DICOM samples on this page, you need to install a recent version of Weasis.\nClicking on the \u0026ldquo;Launch\u0026rdquo; button launches Weasis and displays the selected images, or if Weasis is already open then the images are added to a new tab in the main view.\n  Internationalized characters Launch\nShould display:  Pixel depth (from 9-bit to 16-bit) Should always render the same image.\n  Unsigned data Launch  Signed data Launch    Compression  Different compression syntaxes (JPEG, JPEG-Lossless, JPEG-LS, J2K, RLE) Launch  Compression and fragments (the file contains the encoded pixel data stream fragmented into several parts, see DICOM part5) Launch  Compression, multi-frame and fragments Launch   ------------------------------------------------------------------------ Photometric Interpretation Launch\n Pixel Spacing Launch\nSelect the view and press \u0026rsquo;d' to draw a line.\n  Pixel Padding Value Launch\nShow or hide pixel padding from the \u0026ldquo;Display\u0026rdquo; right pane.\n  Non-square pixels Launch\nStretch or shrink the image according to the \u0026ldquo;pixel spacing\u0026rdquo; or \u0026ldquo;pixel aspect ratio\u0026rdquo; field.\n  Overlay Launch\nShow or hide from the \u0026ldquo;Display\u0026rdquo; right panel.\n  Modality LUT Launch\nShould always render the same image.\n  VOI LUT Launch\nCan be changed in the \u0026ldquo;Image Tool\u0026rdquo; right panel.\n  Combined LUT Launch\nShould always render the same image.\n  Shutter Launch\nShow or hide from the \u0026ldquo;Display\u0026rdquo; right panel.\n  DICOM PDF Launch\nOpen by the default PDF viewer of the operating system.\n  DICOM video Launch\nOpen by the default viewer (associated to the video mime type) of the operating system.\n  DICOM Audio (AU) Launch\nOpen by the embedded Java Audio Player.\n  DICOM floating point pixel data Launch\nSpecific dicom pixel data containing float or double.\n  DICOM Structured Report (SR) Launch\n DICOM Presentation State (PR, GSPS) Click on the right icon over the image to select the Presentation State. Show or hide graphics layers from the \u0026ldquo;Display\u0026rdquo; right panel. See How to build DICOM PR.\n  Shutter Test Launch  Text Annotation Launch  Displayed Area Launch  Modality LUT PState Launch  VOI LUT PState Launch  Presentation LUT PState Launch  Combined LUT PState Launch  Spatial Transformation Launch  Overlay Launch  Graphics Annotation Launch  Complex Combination Launch  GE RA600 Test of CPI GSPS Launch This sample is produced by a GE workstation and contains some proprietary items (so not all PRs can be applied)\n   ------------------------------------------------------------------------ DICOM Key Object Selection (KO) Launch\nClick on the right icon over the image to select the Key Object Selection. See How to build and export DICOM KO.\n "
},
{
	"uri": "https://nroduit.github.io/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://nroduit.github.io/en/",
	"title": "Weasis Medical Viewer",
	"tags": [],
	"description": "Documentation of Weasis DICOM viewer",
	"content": "Weasis Medical Viewer Weasis is a multipurpose standalone and web-based DICOM viewer with a highly modular architecture. It is a very popular clinical viewer used in healthcare by hospitals, health networks, multicenter research trials, and patients.\nWeasis DICOM viewer is cross-platform, free/libre and open source software (FLOSS), multi-language and allows a flexible integration to PACS, RIS, HIS or PHR. This multi-platform DICOM viewer runs on Windows, Linux, and Mac OS X. It allows high-quality renderings with high performance through the OpenCV library.\n                             Add Measurements\n      Languages\n      MPR View\n     It has been designed to meet several expectations of clinical information systems and their future evolution regarding medical imaging: providing web-based access to radiological images, as well as covering a considerable number of DICOM types and offering multimedia capabilities.\nWeasis can display the content of most DICOM files including multi-frame, enhanced, MPEG-2, MPEG-4, MIME Encapsulation, SR, PR, KOS, AU, RT and ECG. It has a high level of DICOM implementation, see the viewer features.\n  Cross-lines\n      Display DICOM RT\n      ECG viewer\n      Export from Mac\n      Lens on view\n      Mammo CAD (SCOORD)\n      Multi-patient and Internalization\n      Splitting series\n      Wave Viewer (mitral valve)\n     Contribute to this documentation Feel free to update this content, just click the Edit this page link displayed on top right of each page, and pullrequest it\nYour modification will be deployed automatically when merged.\n Documentation website This current documentation has been statically generated with Hugo with a simple command: hugo \u0026ndash; source code is available at GitHub.\n"
}]